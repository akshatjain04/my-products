// Test generated by RoostGPT for test MiniProjects using AI Type Azure Open AI and AI Model roost-gpt4-32k


// Test generated for /accounts_post for http method type POST in rest-assured framework


// RoostTestHash=53e96f9805


package com.bootexample4.RoostTest;

import io.jsonwebtoken.Jwts;
import io.jsonwebtoken.SignatureAlgorithm;
import io.restassured.RestAssured;
import io.restassured.http.ContentType;
import io.restassured.response.Response;
import org.junit.jupiter.api.Test;
import static io.restassured.RestAssured.given;
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.HashMap;
import java.util.Map;

public class accountsPostTest { 

    private void validateBadRequestResponse(Response httpResponse) {
        validateErrorResponse(httpResponse, String.class, 400, "^validation/.*$");
    }

    private void validateErrorResponse(Response httpResponse, Class errorFieldClass, int statusCode, String errorPattern) {
        assertEquals("HTTP Status Check:", statusCode, httpResponse.getStatusCode());
        if (httpResponse.jsonPath().get("error") != null) {
            assertThat(httpResponse.jsonPath().get("error"), instanceOf(errorFieldClass));
            assertThat(httpResponse.jsonPath().getString("error"), matchesPattern(errorPattern));
        }
        if (httpResponse.jsonPath().get("description") != null) {
            assertThat(httpResponse.jsonPath().get("description"), instanceOf(String.class));
        }
    }

    private Response sendPostRequest(Map<String, String> map) {
        return given()
                .pathParam("commit-hash", map.getOrDefault("commit-hash", ""))
                .contentType(ContentType.JSON)
                .body("{\n"+
                        "  \"email\": \"" + map.getOrDefault("email", "") + "\"\n"+
                        "}")
                .when()
                .post("/accounts")
                .then()
                .extract().response();
    }

    @Test 
    public void accounts_post_Test() throws IOException { 
        RestAssured.baseURI = System.getenv("BASE_URL");
   
        try (BufferedReader reader = new BufferedReader(new FileReader("src/test/java/com/bootexample4/RoostTest/accountsPostTest.csv"))) { 
            String headerLine = reader.readLine(); 
            String[] headers = headerLine.split(","); 

            String line; 
            while ((line = reader.readLine()) != null) { 
                String[] data = line.split(","); 

                // Create a map of header to data 
                Map<String, String> map = new HashMap<>(); 
                for (int i = 0; i < headers.length; i++) { 
                    map.put(headers[i], data[i]); 
                } 

                Response response = sendPostRequest(map);

                if (response.getStatusCode() == 201) {
                    System.out.println("Success: New account has been successfully created.");
                } else if(response.getStatusCode() == 400) {
                    validateBadRequestResponse(response);
                }               
            } 
        }
    }
}
