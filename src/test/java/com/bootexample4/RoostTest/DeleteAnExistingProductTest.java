/*
Test generated by RoostGPT for test MiniProjects using AI Type Azure Open AI and AI Model roost-gpt4-32k

{
  background: 'Given the base URL is "http://localhost:8080"',
  rule: null,
  scenario: 'Delete an existing product\r\n' +
    '        Given there is an existing product with ID 1\r\n' +
    '        When the client sends a DELETE request to "/api/products/1"\r\n' +
    '        Then the response status code should be 200\r\n' +
    '        And the product with ID 1 should no longer exist',
  title: 'Delete an existing product'
}

*/
package com.bootexample4.RoostTest;

import static io.restassured.RestAssured.given;
import static org.hamcrest.Matchers.equalTo;

import org.testng.annotations.BeforeTest;
import org.testng.annotations.Test;

import io.restassured.RestAssured;

public class DeleteAnExistingProductTest {

  @BeforeTest
  public void setup() {
    RestAssured.baseURI = System.getenv("API_HOST");
  }

  @Test
  public void deleteAnExistingProduct() {
    String productId = "1";

    // Sending GET request to verify if the product exists before deletion
    given()
        .pathParam("productId", productId)
        .when()
        .get("/products/{productId}")
        .then()
        .statusCode(200);

    // Sending DELETE request to delete the product
    given()
        .pathParam("productId", productId)
        .when()
        .delete("/products/{productId}")
        .then()
        .statusCode(200)
        .body("description", equalTo("Product deleted"));

    // Sending GET request to verify if the product no longer exists
    given()
        .pathParam("productId", productId)
        .when()
        .get("/products/{productId}")
        .then()
        .statusCode(404)
        .body("description", equalTo("Product not found"));
  }
}
