/*
Test generated by RoostGPT for test MiniProjects using AI Type Azure Open AI and AI Model roost-gpt4-32k

{
  background: 'Given the base URL is "http://localhost:8080"',
  rule: null,
  scenario: 'Create a new product\r\n' +
    '        Given the client provides the following product data:\r\n' +
    '            | name         | description             | price |\r\n' +
    '            | Test Product | This is a test product. | 10.0  |\r\n' +
    '        When the client sends a POST request to "/api/products"\r\n' +
    '        Then the saved product should not be null and its properties must correspond to those provided by client',
  title: 'Create a new product'
}

*/
package com.bootexample4.RoostTest;

import static io.restassured.RestAssured.given;
import static org.hamcrest.Matchers.equalTo;

import io.restassured.http.ContentType;
import io.restassured.response.Response;
import org.junit.Before;
import org.junit.After;
import org.junit.Test;

public class CreateANewProductTest {

    String baseURL = System.getenv("API_HOST");
    String endpoint = "/api/products";

    @Before
    public void setUp() {
        RestAssured.baseURI = baseURL;
    }

    @After
    public void tearDown() {
    }

    @Test
    public void testCreateANewProduct() {
        String requestBody = "{\n" +
            "  \"name\": \"Test Product\",\n" +
            "  \"description\": \"This is a test product.\",\n" +
            "  \"price\": 10.0\n" +
            "}";

        given()
            .contentType(ContentType.JSON)
            .body(requestBody)
        .when()
            .post(endpoint)
        .then()
            .statusCode(200)
            .body("name", equalTo("Test Product"))
            .body("description", equalTo("This is a test product."))
            .body("price", equalTo(10.0f));
    }
}
