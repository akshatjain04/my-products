/*
Test generated by RoostGPT for test MiniProjects using AI Type Azure Open AI and AI Model roost-gpt4-32k

{
  background: 'Given the base URL is "http://localhost:8080"',
  rule: null,
  scenario: 'Create a new product\r\n' +
    '        Given the client provides the following product data:\r\n' +
    '            | name         | description             | price |\r\n' +
    '            | Test Product | This is a test product. | 10.0  |\r\n' +
    '        When the client sends a POST request to "/api/products"\r\n' +
    '        Then the saved product should not be null and its properties must correspond to those provided by client',
  title: 'Create a new product'
}

*/
package com.bootexample4.RoostTest;
import io.restassured.RestAssured;
import io.restassured.response.Response;
import io.restassured.specification.RequestSpecification;
import org.json.simple.JSONObject;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;

public class CreateANewProductTest {

    @Test
    public void createANewProduct() {
        
        RestAssured.baseURI = System.getenv("API_HOST"); 

        RequestSpecification request = RestAssured.given();

        JSONObject requestBody = new JSONObject();
        requestBody.put("name", "Test Product");
        requestBody.put("description", "This is a test product.");
        requestBody.put("price", 10.0);
        
        request.header("Content-Type", "application/json");
        request.body(requestBody);
        
        Response response = request.post("/products");

        int statusCode = response.getStatusCode();
        String id = response.jsonPath().getString("id");
        String name = response.jsonPath().getString("name");
        String description = response.jsonPath().getString("description");
        Double price = response.jsonPath().getDouble("price");

        assertEquals(200, statusCode); 
        assertNotNull(id); 
        assertEquals("Test Product", name); 
        assertEquals("This is a test product.", description);
        assertEquals(10.0, price);
    }
}
