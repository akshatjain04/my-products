// Test generated by RoostGPT for test MiniProjects using AI Type Azure Open AI and AI Model roost-gpt4-32k


// Test generated for /api/clusters_get for http method type GET in rest-assured framework


// RoostTestHash=502e2dd61e


package com.bootexample4.RoostTest;
import io.restassured.RestAssured;
import io.restassured.http.ContentType;
import io.restassured.response.Response;
import org.junit.jupiter.api.Test;
import static io.restassured.RestAssured.given;
import static org.junit.Assert.*;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;
import java.util.List;
import org.hamcrest.MatcherAssert;
import static org.hamcrest.Matchers.*;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class clustersGetTest {
  
    @Test  
    public void clusters_get_Test() {  
        RestAssured.baseURI = System.getenv("BASE_URL");  
  
        // Read CSV file  
        try (BufferedReader reader = new BufferedReader(new FileReader("src\test\java\com\bootexample4\RoostTest\clustersGetTest.csv"))) {  
            String headerLine = reader.readLine();  
            String[] headers = headerLine.split(",");  
  
            String line;  
            while ((line = reader.readLine()) != null) {  
                String[] data = line.split(",");  
  
                // Create a map of header to data  
                Map<String, String> map = new HashMap<>();  
                for (int i = 0; i < headers.length; i++) {  
                    map.put(headers[i], data[i]);  
                }  
                
  
                Response response = given()undefined
                .when()
                .get("/api/clusters")  
                .then() 
                .extract().response();    
         
                if (response.statusCode() == 200) {
					System.out.println("Description: GetClusterResponse");
    
              if (response.jsonPath().get("jwt_token") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("jwt_token"), instanceOf(String.class));  
          }
    
              if (response.jsonPath().get("message") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("message"), instanceOf(String.class));  
          }
    
              if (response.jsonPath().get("project_id") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("project_id"), instanceOf(String.class));  
          }
    
              if (response.jsonPath().get("spec") != null) {    
              if (response.jsonPath().get("spec.cluster_id") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("spec.cluster_id"), instanceOf(Integer.class));  
          }
    
              if (response.jsonPath().get("spec.cluster_type") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("spec.cluster_type"), instanceOf(String.class));  
          }
    
              if (response.jsonPath().get("spec.credential") != null) {  
          }
    
              if (response.jsonPath().get("spec.description") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("spec.description"), instanceOf(String.class));  
          }
    
              if (response.jsonPath().get("spec.device_id") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("spec.device_id"), instanceOf(String.class));  
          }
    
              if (response.jsonPath().get("spec.jumphost") != null) {    
              if (response.jsonPath().get("spec.jumphost.endpoint") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("spec.jumphost.endpoint"), instanceOf(String.class));  
          }
    
              if (response.jsonPath().get("spec.jumphost.organization_jumphost") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("spec.jumphost.organization_jumphost"), instanceOf(Boolean.class));  
          }
    
              if (response.jsonPath().get("spec.jumphost.password") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("spec.jumphost.password"), instanceOf(String.class));  
          }
    
              if (response.jsonPath().get("spec.jumphost.ssh_pem_file") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("spec.jumphost.ssh_pem_file"), instanceOf(String.class));  
          }
    
              if (response.jsonPath().get("spec.jumphost.token") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("spec.jumphost.token"), instanceOf(String.class));  
          }
    
              if (response.jsonPath().get("spec.jumphost.username") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("spec.jumphost.username"), instanceOf(String.class));  
          }
  
          }
    
              if (response.jsonPath().get("spec.kube_config_path") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("spec.kube_config_path"), instanceOf(String.class));  
          }
    
              if (response.jsonPath().get("spec.kubernetes_version") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("spec.kubernetes_version"), instanceOf(String.class));  
          }
    
              if (response.jsonPath().get("spec.name") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("spec.name"), instanceOf(String.class));  
          }
    
              if (response.jsonPath().get("spec.nodes") != null) {    
                for (int i = 0; i < response.jsonPath().getList("spec.nodes").size(); i++) {    
              if (response.jsonPath().get("spec.nodes[`"+ i +"`].ami") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("spec.nodes[`"+ i +"`].ami"), instanceOf(String.class));  
          }
    
              if (response.jsonPath().get("spec.nodes[`"+ i +"`].disk_size") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("spec.nodes[`"+ i +"`].disk_size"), instanceOf(String.class));  
          }
    
              if (response.jsonPath().get("spec.nodes[`"+ i +"`].instance_type") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("spec.nodes[`"+ i +"`].instance_type"), instanceOf(String.class));  
          }
    
              if (response.jsonPath().get("spec.nodes[`"+ i +"`].name") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("spec.nodes[`"+ i +"`].name"), instanceOf(String.class));  
          }
    
              if (response.jsonPath().get("spec.nodes[`"+ i +"`].node_type") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("spec.nodes[`"+ i +"`].node_type"), instanceOf(String.class));  
          }
    
                  }  
                MatcherAssert.assertThat(response.jsonPath().getList("spec.nodes"), instanceOf(List.class));
  
          }
    
              if (response.jsonPath().get("spec.provider") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("spec.provider"), instanceOf(String.class));  
          }
    
              if (response.jsonPath().get("spec.region") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("spec.region"), instanceOf(String.class));  
          }
    
              if (response.jsonPath().get("spec.roost_config") != null) {    
              if (response.jsonPath().get("spec.roost_config.allow_root_containers") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("spec.roost_config.allow_root_containers"), instanceOf(Boolean.class));  
          }
    
              if (response.jsonPath().get("spec.roost_config.auto_destroy") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("spec.roost_config.auto_destroy"), instanceOf(Integer.class));  
          }
    
              if (response.jsonPath().get("spec.roost_config.autodeploy") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("spec.roost_config.autodeploy"), instanceOf(Boolean.class));  
          }
    
              if (response.jsonPath().get("spec.roost_config.client") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("spec.roost_config.client"), instanceOf(String.class));  
          }
    
              if (response.jsonPath().get("spec.roost_config.cluster_access_token") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("spec.roost_config.cluster_access_token"), instanceOf(String.class));  
          }
    
              if (response.jsonPath().get("spec.roost_config.configmap_secret_rsrcs_auto_update") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("spec.roost_config.configmap_secret_rsrcs_auto_update"), instanceOf(Boolean.class));  
          }
    
              if (response.jsonPath().get("spec.roost_config.disk") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("spec.roost_config.disk"), instanceOf(String.class));  
          }
    
              if (response.jsonPath().get("spec.roost_config.docker_daemon") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("spec.roost_config.docker_daemon"), instanceOf(String.class));  
          }
    
              if (response.jsonPath().get("spec.roost_config.docker_registry") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("spec.roost_config.docker_registry"), instanceOf(String.class));  
          }
    
              if (response.jsonPath().get("spec.roost_config.email") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("spec.roost_config.email"), instanceOf(String.class));  
          }
    
              if (response.jsonPath().get("spec.roost_config.env_config") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("spec.roost_config.env_config"), instanceOf(String.class));  
          }
    
              if (response.jsonPath().get("spec.roost_config.heterogeneous") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("spec.roost_config.heterogeneous"), instanceOf(Boolean.class));  
          }
    
              if (response.jsonPath().get("spec.roost_config.image_auto_update_rsrcs") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("spec.roost_config.image_auto_update_rsrcs"), instanceOf(Boolean.class));  
          }
    
              if (response.jsonPath().get("spec.roost_config.image_retention_period") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("spec.roost_config.image_retention_period"), instanceOf(Integer.class));  
          }
    
              if (response.jsonPath().get("spec.roost_config.install_script") != null) {    
                for (int i = 0; i < response.jsonPath().getList("spec.roost_config.install_script").size(); i++) {    
                  }  
                MatcherAssert.assertThat(response.jsonPath().getList("spec.roost_config.install_script"), instanceOf(List.class));
  
          }
    
              if (response.jsonPath().get("spec.roost_config.local_cluster_size") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("spec.roost_config.local_cluster_size"), instanceOf(String.class));  
          }
    
              if (response.jsonPath().get("spec.roost_config.log_level") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("spec.roost_config.log_level"), instanceOf(String.class));  
          }
    
              if (response.jsonPath().get("spec.roost_config.max_spot_price") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("spec.roost_config.max_spot_price"), instanceOf(String.class));  
          }
    
              if (response.jsonPath().get("spec.roost_config.memory") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("spec.roost_config.memory"), instanceOf(String.class));  
          }
    
              if (response.jsonPath().get("spec.roost_config.node_directory") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("spec.roost_config.node_directory"), instanceOf(String.class));  
          }
    
              if (response.jsonPath().get("spec.roost_config.organization_data") != null) {    
              if (response.jsonPath().get("spec.roost_config.organization_data.cluster_short_name") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("spec.roost_config.organization_data.cluster_short_name"), instanceOf(String.class));  
          }
    
              if (response.jsonPath().get("spec.roost_config.organization_data.defer_in_hrs") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("spec.roost_config.organization_data.defer_in_hrs"), instanceOf(Integer.class));  
          }
    
              if (response.jsonPath().get("spec.roost_config.organization_data.jumphost_id") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("spec.roost_config.organization_data.jumphost_id"), instanceOf(String.class));  
          }
    
              if (response.jsonPath().get("spec.roost_config.organization_data.time_schedule") != null) {    
              if (response.jsonPath().get("spec.roost_config.organization_data.time_schedule.days") != null) {    
                for (int i = 0; i < response.jsonPath().getList("spec.roost_config.organization_data.time_schedule.days").size(); i++) {    
                  }  
                MatcherAssert.assertThat(response.jsonPath().getList("spec.roost_config.organization_data.time_schedule.days"), instanceOf(List.class));
  
          }
    
              if (response.jsonPath().get("spec.roost_config.organization_data.time_schedule.sleep_time") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("spec.roost_config.organization_data.time_schedule.sleep_time"), instanceOf(String.class));  
          }
    
              if (response.jsonPath().get("spec.roost_config.organization_data.time_schedule.timezone") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("spec.roost_config.organization_data.time_schedule.timezone"), instanceOf(String.class));  
          }
    
              if (response.jsonPath().get("spec.roost_config.organization_data.time_schedule.wakeup_time") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("spec.roost_config.organization_data.time_schedule.wakeup_time"), instanceOf(String.class));  
          }
  
          }
    
              if (response.jsonPath().get("spec.roost_config.organization_data.turn_off_schedule") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("spec.roost_config.organization_data.turn_off_schedule"), instanceOf(Boolean.class));  
          }
  
          }
    
              if (response.jsonPath().get("spec.roost_config.plugins") != null) {    
              if (response.jsonPath().get("spec.roost_config.plugins.airflow") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("spec.roost_config.plugins.airflow"), instanceOf(Boolean.class));  
          }
    
              if (response.jsonPath().get("spec.roost_config.plugins.argo") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("spec.roost_config.plugins.argo"), instanceOf(Boolean.class));  
          }
    
              if (response.jsonPath().get("spec.roost_config.plugins.falco") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("spec.roost_config.plugins.falco"), instanceOf(Boolean.class));  
          }
    
              if (response.jsonPath().get("spec.roost_config.plugins.hnc") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("spec.roost_config.plugins.hnc"), instanceOf(Boolean.class));  
          }
    
              if (response.jsonPath().get("spec.roost_config.plugins.istio") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("spec.roost_config.plugins.istio"), instanceOf(Boolean.class));  
          }
    
              if (response.jsonPath().get("spec.roost_config.plugins.linkerd") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("spec.roost_config.plugins.linkerd"), instanceOf(Boolean.class));  
          }
    
              if (response.jsonPath().get("spec.roost_config.plugins.servicemesh") != null) {    
              if (response.jsonPath().get("spec.roost_config.plugins.servicemesh.enabled") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("spec.roost_config.plugins.servicemesh.enabled"), instanceOf(Boolean.class));  
          }
    
              if (response.jsonPath().get("spec.roost_config.plugins.servicemesh.error_rate") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("spec.roost_config.plugins.servicemesh.error_rate"), instanceOf(Integer.class));  
          }
    
              if (response.jsonPath().get("spec.roost_config.plugins.servicemesh.interval_time") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("spec.roost_config.plugins.servicemesh.interval_time"), instanceOf(Integer.class));  
          }
    
              if (response.jsonPath().get("spec.roost_config.plugins.servicemesh.latency") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("spec.roost_config.plugins.servicemesh.latency"), instanceOf(Integer.class));  
          }
    
              if (response.jsonPath().get("spec.roost_config.plugins.servicemesh.request_rate") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("spec.roost_config.plugins.servicemesh.request_rate"), instanceOf(Integer.class));  
          }
    
              if (response.jsonPath().get("spec.roost_config.plugins.servicemesh.saturation") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("spec.roost_config.plugins.servicemesh.saturation"), instanceOf(Integer.class));  
          }
  
          }
    
              if (response.jsonPath().get("spec.roost_config.plugins.slack") != null) {    
              if (response.jsonPath().get("spec.roost_config.plugins.slack.channel") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("spec.roost_config.plugins.slack.channel"), instanceOf(String.class));  
          }
    
              if (response.jsonPath().get("spec.roost_config.plugins.slack.enabled") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("spec.roost_config.plugins.slack.enabled"), instanceOf(Boolean.class));  
          }
    
              if (response.jsonPath().get("spec.roost_config.plugins.slack.token") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("spec.roost_config.plugins.slack.token"), instanceOf(String.class));  
          }
  
          }
  
          }
    
              if (response.jsonPath().get("spec.roost_config.pod_security_policy") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("spec.roost_config.pod_security_policy"), instanceOf(Boolean.class));  
          }
    
              if (response.jsonPath().get("spec.roost_config.preemptible") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("spec.roost_config.preemptible"), instanceOf(Boolean.class));  
          }
    
              if (response.jsonPath().get("spec.roost_config.random_tag_docker_build") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("spec.roost_config.random_tag_docker_build"), instanceOf(Boolean.class));  
          }
    
              if (response.jsonPath().get("spec.roost_config.rbac_scope") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("spec.roost_config.rbac_scope"), instanceOf(String.class));  
          }
    
              if (response.jsonPath().get("spec.roost_config.registry_type") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("spec.roost_config.registry_type"), instanceOf(String.class));  
          }
    
              if (response.jsonPath().get("spec.roost_config.roost_auth_token") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("spec.roost_config.roost_auth_token"), instanceOf(String.class));  
          }
    
              if (response.jsonPath().get("spec.roost_config.roost_username") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("spec.roost_config.roost_username"), instanceOf(String.class));  
          }
    
              if (response.jsonPath().get("spec.roost_config.roostapi_key") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("spec.roost_config.roostapi_key"), instanceOf(String.class));  
          }
    
              if (response.jsonPath().get("spec.roost_config.spot_instance_type") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("spec.roost_config.spot_instance_type"), instanceOf(String.class));  
          }
    
              if (response.jsonPath().get("spec.roost_config.storage_per_node") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("spec.roost_config.storage_per_node"), instanceOf(String.class));  
          }
    
              if (response.jsonPath().get("spec.roost_config.uninstall_script") != null) {    
                for (int i = 0; i < response.jsonPath().getList("spec.roost_config.uninstall_script").size(); i++) {    
                  }  
                MatcherAssert.assertThat(response.jsonPath().getList("spec.roost_config.uninstall_script"), instanceOf(List.class));
  
          }
    
              if (response.jsonPath().get("spec.roost_config.vcpu") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("spec.roost_config.vcpu"), instanceOf(Integer.class));  
          }
    
              if (response.jsonPath().get("spec.roost_config.vcpu_execution_cap") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("spec.roost_config.vcpu_execution_cap"), instanceOf(Integer.class));  
          }
  
          }
    
              if (response.jsonPath().get("spec.size") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("spec.size"), instanceOf(Integer.class));  
          }
    
              if (response.jsonPath().get("spec.type") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("spec.type"), instanceOf(String.class));  
          }
    
              if (response.jsonPath().get("spec.user_role") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("spec.user_role"), instanceOf(String.class));  
          }
    
              if (response.jsonPath().get("spec.zone") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("spec.zone"), instanceOf(String.class));  
          }
  
          }
    
              if (response.jsonPath().get("status") != null) {    
              if (response.jsonPath().get("status.PlugInStatus") != null) {    
              if (response.jsonPath().get("status.PlugInStatus.Airflow") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("status.PlugInStatus.Airflow"), instanceOf(String.class));  
          }
    
              if (response.jsonPath().get("status.PlugInStatus.Argo") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("status.PlugInStatus.Argo"), instanceOf(String.class));  
          }
    
              if (response.jsonPath().get("status.PlugInStatus.Falco") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("status.PlugInStatus.Falco"), instanceOf(String.class));  
          }
    
              if (response.jsonPath().get("status.PlugInStatus.HNC") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("status.PlugInStatus.HNC"), instanceOf(String.class));  
          }
    
              if (response.jsonPath().get("status.PlugInStatus.ServiceMesh") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("status.PlugInStatus.ServiceMesh"), instanceOf(String.class));  
          }
    
              if (response.jsonPath().get("status.PlugInStatus.Slack") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("status.PlugInStatus.Slack"), instanceOf(String.class));  
          }
  
          }
    
              if (response.jsonPath().get("status.added_at") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("status.added_at"), instanceOf(Integer.class));  
          }
    
              if (response.jsonPath().get("status.cluster_ip") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("status.cluster_ip"), instanceOf(String.class));  
          }
    
              if (response.jsonPath().get("status.label") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("status.label"), instanceOf(String.class));  
          }
    
              if (response.jsonPath().get("status.message") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("status.message"), instanceOf(String.class));  
          }
    
              if (response.jsonPath().get("status.nodes") != null) {    
                for (int i = 0; i < response.jsonPath().getList("status.nodes").size(); i++) {    
              if (response.jsonPath().get("status.nodes[`"+ i +"`].instance_type") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("status.nodes[`"+ i +"`].instance_type"), instanceOf(String.class));  
          }
    
              if (response.jsonPath().get("status.nodes[`"+ i +"`].ip_external") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("status.nodes[`"+ i +"`].ip_external"), instanceOf(String.class));  
          }
    
              if (response.jsonPath().get("status.nodes[`"+ i +"`].ip_internal") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("status.nodes[`"+ i +"`].ip_internal"), instanceOf(String.class));  
          }
    
              if (response.jsonPath().get("status.nodes[`"+ i +"`].name") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("status.nodes[`"+ i +"`].name"), instanceOf(String.class));  
          }
    
              if (response.jsonPath().get("status.nodes[`"+ i +"`].node_type") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("status.nodes[`"+ i +"`].node_type"), instanceOf(String.class));  
          }
    
                  }  
                MatcherAssert.assertThat(response.jsonPath().getList("status.nodes"), instanceOf(List.class));
  
          }
    
              if (response.jsonPath().get("status.state") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("status.state"), instanceOf(String.class));  
          }
  
          }
    
              if (response.jsonPath().get("token_management_script") != null) {
                MatcherAssert.assertThat(response.jsonPath().get("token_management_script"), instanceOf(String.class));  
          }
				}
  
            }  
        } catch (IOException e) {  
            e.printStackTrace();  
        }  
    }
}
