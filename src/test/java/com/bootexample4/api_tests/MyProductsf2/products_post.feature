# ********RoostGPT********

# Test generated by RoostGPT for test MiniProjects using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# Feature file generated for /products_post for http method type POST 
# RoostTestHash=2c080099fd
# 
# 

# ********RoostGPT********
Feature: Test the /products endpoint

  Background:
    * def urlBase = karate.properties['MY_PRODUCTS_BASE_URL']
    * url urlBase

  Scenario Outline: Test POST /products with valid inputs
    Given path 'products'
    And request """ 
    { 
      "name": <name>, 
      "description": <description>, 
      "price": <price> 
    } 
    """
    When method POST
    Then status 200
    And match response == '#object'
    And match response.id == '#integer'
    And match response.name == '#string'
    And match response.description == '#string'
    And match response.price == '#integer'
    And match response CONTAINS { id: '#integer', name: '#string', description: '#string', price: '#integer' }

    Examples:
      | name    | description                  | price |
      | apple   | description of the product   |    20 |
      | book    | famous book                  |    30 |

  Scenario: Test POST /products with invalid input
    Given path 'products'
    And request """ 
    { 
      "invalid": "data" 
    } 
    """
    When method POST
    Then status 405
    And match response == null

  Scenario: Test response headers for POST /products
    Given path 'products'
    And request """ 
    { 
      "name": "apple", 
      "description": "description of the product", 
      "price": 20 
    } 
    """
    When method POST
    Then status 200
    And match response == '#object'
    And match response.id == '#integer'
    And match response.name == '#string'
    And match response.description == '#string'
    And match response.price == '#integer'
    And match response CONTAINS { id: '#integer', name: '#string', description: '#string', price: '#integer' }
    And match responseHeaders['Content-Type'] == 'application/json'
