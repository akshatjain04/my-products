# ********RoostGPT********

# Test generated by RoostGPT for test MiniProjects using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# Feature file generated for /nobelPrize/{category}/{year}_get for http method type GET 
# RoostTestHash=adfce3f1d2
# 
# 

# ********RoostGPT********
Feature: Testing Nobel Prize API

  Background:
    * def urlBase = karate.properties['NOBEL_API_HOST']
    * url urlBase

  Scenario Outline: Verify successful response for Nobel Prize data retrieval
    Given path '2.1/nobelPrize/<category>/<year>'
    When method GET
    Then status 200
    And match response.nobelPrize.awardYear == '#number'
    And match response.nobelPrize.category.en == '#string'
    And match response.nobelPrize.category.se == '#string'
    And match response.nobelPrize.category.false == '#string'
    And match response.nobelPrize.dateAwarded == '#string'
    And match response.nobelPrize.prizeAmount == '#number'
    And match response.nobelPrize.prizeAmountAdjusted == '#number'
    And match response.nobelPrize.topMotivation.en == '#string'
    And match response.nobelPrize.topMotivation.se == '#string'
    And match response.nobelPrize.topMotivation.false == '#string'
    And match response.nobelPrize.laureates == '#[]'
    And match response.nobelPrize.laureates[*].id == '#number'
    And match response.nobelPrize.laureates[*].name.en == '#string'
    And match response.nobelPrize.laureates[*].name.se == '#string'
    And match response.nobelPrize.laureates[*].name.false == '#string'
    And match response.nobelPrize.laureates[*].portion == '#string'
    And match response.nobelPrize.laureates[*].sortOrder == '#string'
    And match response.nobelPrize.laureates[*].motivation.en == '#string'
    And match response.nobelPrize.laureates[*].motivation.se == '#string'
    And match response.nobelPrize.laureates[*].motivation.false == '#string'
    And match response.nobelPrize.laureates[*].links == '#[]'
    And match response.nobelPrize.laureates[*].links[*].rel == '#string'
    And match response.nobelPrize.laureates[*].links[*].href == '#string'
    And match response.nobelPrize.laureates[*].links[*].action == '#string'
    And match response.nobelPrize.laureates[*].links[*].types == '#string'

    Examples:
      | read('nobelPrize_category_year_get.csv') |

  Scenario Outline: Verify Bad Request response
    Given path '2.1/nobelPrize/<category>/<year>'
    When method GET
    Then status 400
    And match response.code == '#string'
    And match response.message == '#string'

    Examples:
      | category | year |
      | invalid  | 2021 |
      | med      | 1899 |

  Scenario Outline: Verify Not Found response
    Given path '2.1/nobelPrize/<category>/<year>'
    When method GET
    Then status 404
    And match response.code == '#string'
    And match response.message == '#string'

    Examples:
      | category | year |
      | pea      | 1902 |
      | lit      | 3001 |

  Scenario Outline: Verify Unprocessable Entity response
    Given path '2.1/nobelPrize/<category>/<year>'
    When method GET
    Then status 422
    And match response.code == '#string'
    And match response.message == '#string'

    Examples:
      | category  | year |
      | undefined | 2000 |
      | empty     | 2023 |
