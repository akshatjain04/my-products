# ********RoostGPT********

# Test generated by RoostGPT for test MiniProjects using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# Feature file generated for /pet/{petId}_post for http method type POST 
# RoostTestHash=c0bc5294a0
# 
# 

# ********RoostGPT********
Feature: Update a pet in the store with form data

  Background:
    * def urlBase = karate.properties['PETSTORE_API_HOST']
    * url urlBase
    * configure headers = { Authorization: '#(karate.properties["PETSTORE_AUTH_TOKEN"])' }

  Scenario Outline: Successfully update a pet with valid form data
    Given path '/v2/pet/<petId>'
    And param name = '<name>'
    And param status = '<status>'
    When method POST
    Then status 200
    And match response == '''
      {
        id: '#number',
        name: '#string',
        status: '#string'
      }
    '''

    Examples:
      | petId | name    | status      |
      |   123 | Fido    | sold        |
      |   124 | Bella   | available   |

  Scenario: Update pet without optional parameters (only petId provided)
    Given path '/v2/pet/125'
    When method POST
    Then status 200
    And match response == '''
      {
        id: '#number',
        name: '#string',
        status: '#string'
      }
    '''

  Scenario Outline: Attempt update with invalid petId
    Given path '/v2/pet/<invalidPetId>'
    And param name = '<name>'
    And param status = '<status>'
    When method POST
    Then status 404
    And match response == '''
      {
        message: '#string'
      }
    '''
    And match response.message contains 'Pet not found'

    Examples:
      | invalidPetId | name   | status |
      |            0 | N/A    | N/A    |
      |           -1 | Fido   | sold   |

  Scenario Outline: Attempt update with missing authorization
    * configure headers = {}
    Given path '/v2/pet/<petId>'
    And param name = '<name>'
    And param status = '<status>'
    When method POST
    Then status 401

    Examples:
      | petId | name   | status    |
      |   126 | Lucy   | pending   |

  Scenario Outline: Invalid input causing 405 error
    Given path '/v2/pet/<petId>'
    And param name = '<invalidName>'
    And param status = '<invalidStatus>'
    When method POST
    Then status 405
    And match response == '''
      {
        message: '#string'
      }
    '''
    And match response.message contains 'Invalid input'

    Examples:
      | petId | invalidName | invalidStatus |
      |   127 | 123         | true          |
      |   128 | false       | 789           |
