# ********RoostGPT********

# Test generated by RoostGPT for test MiniProjects using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# Feature file generated for /pet/{petId}_get for http method type GET 
# RoostTestHash=561990ad39
# 
# 

# ********RoostGPT********
Feature: Validate the /v2/pet/{petId} endpoint functionality

  Background:
    * def urlBase = karate.properties['PETSTORE_API_HOST']
    * url urlBase
    * configure headers = { Authorization: #(karate.properties['PETSTORE_API_KEY']) }

  Scenario Outline: Validate successful retrieval of pet by petId
    Given path 'v2', 'pet', <petId>
    When method GET
    Then status 200
    And match response == '#object'
    And match response.id == '#number'
    And match response.category == '#object?'
    And match response.category.id == '#number?'
    And match response.category.name == '#string?'
    And match response.name == '#string'
    And match response.photoUrls == '#array'
    And match response.photoUrls[*] == '#string'
    And match response.tags == '#array?'
    And match response.tags[*].id == '#number?'
    And match response.tags[*].name == '#string?'
    And match response.status == '#string'
    And match response.status == '#enum ["available", "pending", "sold"]'

    Examples:
      | read('pet_petId_get.csv') |

  Scenario: Validate 400 response for invalid petId
    Given path 'v2', 'pet', 'abc'
    When method GET
    Then status 400

  Scenario: Validate 404 response for petId not found
    Given path 'v2', 'pet', 999999
    When method GET
    Then status 404

  Scenario Outline: Validate response headers for successful request
    Given path 'v2', 'pet', <petId>
    When method GET
    Then status 200
    And match responseHeaders["Content-Type"] == '#string'
    And match responseHeaders["Content-Type"] CONTAINS 'application/json'

    Examples:
      | read('pet_petId_get.csv') |
