# ********RoostGPT********

# Test generated by RoostGPT for test MiniProjects using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# Feature file generated for /pet/{petId}/uploadImage_post for http method type POST 
# RoostTestHash=8dac89cb33
# 
# 

# ********RoostGPT********
Feature: Test the /v2/pet/{petId}/uploadImage API endpoint

  Background:
    * def urlBase = karate.properties['PETSTORE_API_HOST']
    * url urlBase
    * configure headers = { Authorization: #(karate.properties['PETSTORE_AUTH_TOKEN']) }

  Scenario Outline: Validate successful image upload
    Given path 'v2/pet/<petId>/uploadImage'
    And form field additionalMetadata = <additionalMetadata>
    And multipart file file =
      """
      {
        read: '<filePath>',
        filename: '<fileName>',
        contentType: '<contentType>'
      }
      """
    When method POST
    Then status 200
    And match response.code == '#number'
    And match response.type == '#string'
    And match response.message == '#string'

    Examples:
      | read('pet_petId_uploadImage_post.csv') |

  Scenario Outline: Validate image upload with missing file
    Given path 'v2/pet/<petId>/uploadImage'
    And form field additionalMetadata = <additionalMetadata>
    When method POST
    Then status 200
    And match response.code == '#number'
    And match response.type == '#string'
    And match response.message == '#string'

    Examples:
      | read('pet_petId_uploadImage_post.csv') |

  Scenario Outline: Validate error handling for invalid petId
    Given path 'v2/pet/<petId>/uploadImage'
    And form field additionalMetadata = <additionalMetadata>
    And multipart file file =
      """
      {
        read: '<filePath>',
        filename: '<fileName>',
        contentType: '<contentType>'
      }
      """
    When method POST
    Then status <statusCode>
    And match response.code == '#number'
    And match response.type == '#string'
    And match response.message == '#string'

    Examples:
      | petId       | additionalMetadata | filePath       | fileName       | contentType | statusCode |
      |          -1 | invalid ID         | test_image.jpg | test_image.jpg | image/jpeg  |        404 |
      | 99999999999 | nonexistent petId  | test_image.png | test_image.png | image/png   |        404 |

  Scenario Outline: Validate API response headers are present
    Given path 'v2/pet/<petId>/uploadImage'
    And form field additionalMetadata = <additionalMetadata>
    And multipart file file =
      """
      {
        read: '<filePath>',
        filename: '<fileName>',
        contentType: '<contentType>'
      }
      """
    When method POST
    Then status 200
    And match responseHeaders['Content-Type'] == 'application/json'

    Examples:
      | read('pet_petId_uploadImage_post.csv') |
