# ********RoostGPT********

# Test generated by RoostGPT for test MiniProjects using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# Feature file generated for /pet/{petId}/uploadImage_post for http method type POST 
# RoostTestHash=8dac89cb33
# 
# 

# ********RoostGPT********
Feature: Upload Image API Tests
  Description: This feature file tests the functionality of the /v2/pet/{petId}/uploadImage endpoint.

  Background:
    * def urlBase = karate.properties['URL_BASE']
    * url urlBase
    * configure headers = { Authorization: "#(karate.properties['PETSTORE_AUTH_TOKEN'])" }

  Scenario Outline: Test successful image upload
    Given path 'v2/pet/<petId>/uploadImage'
    And multipart field additionalMetadata = "<additionalMetadata>"
    And multipart file file =
      """
      {
        read: "<filePath>",
        filename: "<fileName>",
        contentType: 'image/jpeg'
      }
      """
    When method POST
    Then status 200
    And match response == '#object'
    And match response.code == '#number'
    And match response.type == '#string'
    And match response.message == '#string'

    Examples:
      | read('pet_petId_uploadImage_post.csv') |

  Scenario Outline: Test invalid petId format
    Given path 'v2/pet/<petId>/uploadImage'
    And multipart field additionalMetadata = "<additionalMetadata>"
    And multipart file file =
      """
      {
        read: "<filePath>",
        filename: "<fileName>",
        contentType: 'image/jpeg'
      }
      """
    When method POST
    Then status 400
    And match response == '#object'
    And match response.code == '#number'
    And match response.type == '#string'
    And match response.message == '#string'

    Examples:
      | petId | additionalMetadata | filePath | fileName    |
      | abc   | Invalid Metadata   | test.jpg | badfile.jpg |
      |    -1 | Invalid Metadata   | null     | null        |

  Scenario Outline: Test missing image file
    Given path 'v2/pet/<petId>/uploadImage'
    And multipart field additionalMetadata = "<additionalMetadata>"
    When method POST
    Then status 400
    And match response == '#object'
    And match response.code == '#number'
    And match response.type == '#string'
    And match response.message == '#string'

    Examples:
      | petId | additionalMetadata     |
      |   123 | Missing Image Metadata |
      |   456 | null                   |

  Scenario Outline: Test successful operation with only metadata
    Given path 'v2/pet/<petId>/uploadImage'
    And multipart field additionalMetadata = "<additionalMetadata>"
    When method POST
    Then status 200
    And match response == '#object'
    And match response.code == '#number'
    And match response.type == '#string'
    And match response.message == '#string'

    Examples:
      | read('pet_petId_uploadImage_post.csv') |

  Scenario Outline: Validate response headers
    Given path 'v2/pet/<petId>/uploadImage'
    And multipart field additionalMetadata = "<additionalMetadata>"
    And multipart file file =
      """
      {
        read: "<filePath>",
        filename: "<fileName>",
        contentType: 'image/png'
      }
      """
    When method POST
    Then status 200
    And match responseHeaders['Content-Type'] == 'application/json'

    Examples:
      | read('pet_petId_uploadImage_post.csv') |
