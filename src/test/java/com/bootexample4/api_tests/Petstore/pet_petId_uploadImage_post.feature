# ********RoostGPT********

# Test generated by RoostGPT for test MiniProjects using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# Feature file generated for /pet/{petId}/uploadImage_post for http method type POST 
# RoostTestHash=8dac89cb33
# 
# 

# ********RoostGPT********
Feature: Test scenarios for the /v2/pet/{petId}/uploadImage API

  Background:
    * def urlBase = karate.properties['PETSTORE_API_HOST']
    * url urlBase
    * configure headers = { Authorization: 'Bearer ' + karate.properties['AUTH_TOKEN'] }

  Scenario Outline: Test successful image upload
    Given path '/v2/pet/<petId>/uploadImage'
    And multipart field additionalMetadata = """<additionalMetadata>"""
    And multipart file file =
      """
      {
        read: '<file.read>', 
        filename: '<file.filename>', 
        contentType: '<file.contentType>'
      }
      """
    When method POST
    Then status 200
    And match response ==
      """
      {
        "code": '#number', 
        "type": '#string', 
        "message": '#string'
      }
      """
    And match response.code == '#number'
    And match response.type == '#string'
    And match response.message == '#string'

    Examples:
      | read('pet_petId_uploadImage_post.csv') |

  Scenario: Test missing required path parameter 'petId'
    Given path '/v2/pet/uploadImage'
    And multipart field additionalMetadata = """Test metadata"""
    And multipart file file =
      """
      {
        read: 'test-file.doc', 
        filename: 'test-file.doc', 
        contentType: 'application/msword'
      }
      """
    When method POST
    Then status 404

  Scenario: Test no additional metadata and no file
    Given path '/v2/pet/999/uploadImage'
    When method POST
    Then status 200
    And match response ==
      """
      {
        "code": '#number', 
        "type": '#string', 
        "message": '#string'
      }
      """

  Scenario Outline: Test invalid 'petId' data types
    Given path '/v2/pet/<petId>/uploadImage'
    And multipart field additionalMetadata = """Metadata example"""
    When method POST
    Then status <expectedStatus>

    Examples:
      | petId   | expectedStatus |
      | invalid |            404 |
      | #@!%    |            404 |

  Scenario Outline: Test response headers
    Given path '/v2/pet/<petId>/uploadImage'
    And multipart file file =
      """
      {
        read: 'header-image.jpg', 
        filename: 'header-image.jpg', 
        contentType: 'image/jpeg'
      }
      """
    When method POST
    Then status 200
    And match responseHeaders['Content-Type'] == 'application/json'

    Examples:
      | read('pet_petId_uploadImage_post.csv') |
