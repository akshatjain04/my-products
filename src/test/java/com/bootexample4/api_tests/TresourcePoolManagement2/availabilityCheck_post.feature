# ********RoostGPT********

# Test generated by RoostGPT for test MiniProjects using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# Test generated by RoostGPT for test MiniProjects using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# Feature file generated for /availabilityCheck_post for http method type POST 
# RoostTestHash=bc409fdb92
# 
# 

# ********RoostGPT********
Feature: Availability Check

  Background:
    * def urlBase = karate.properties['url1_tresourcePoolManagement_(2)_URL_BASE'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase
    * configure headers = { Authorization: '#(karate.properties['url1_tresourcePoolManagement_(2)_AUTH_TOKEN'])' }

  Scenario Outline: Successful operation
    Given path '/availabilityCheck'
    * request <request>
    When method post
    * status 200
    * match each response.control == {"type":"#string","code":"#string","message":"#string"}
    * match response.resource == "#object"
    * match each response.resource['inventoryId'] == '#number'
    * match each response.resource['maxBandwidth'] == '#number'
    * match each response.resource['availabilityType'] == '#number'
    * match each response.resource['availabilityCode'] == '#number'
    * match response.resource['availabilityDescription'] == '#string'
    * match each response.resource.products.product == "#array"
    * match each response.resource.products.product[*].type == "#string"
    * match each response.resource.products.product[*].catalogId == "#string"
    * match each response.resource.products.product[*].name == "#string"
    * match each response.resource.products.product[*].technology == "#string"
    * match each response.resource.products.product[*].best_offer ? '##boolean'

    Examples:
      | read('availabilityCheck_post.csv') |

  Scenario: Bad Request
    Given path '/availabilityCheck'
    * request {"customer":{},"address":{}}
    When method post
    * status 400
    * match response.control == {"type":"E","code":400,"message":"#string"}

  Scenario: Unauthorized
    Given path '/availabilityCheck'
    When method post
    * status 401
    * match response == {"control":{"type":"E","code":401,"message":"#regex[.*]"}}

  Scenario: Forbidden - Scope Not Permitted
    Given path '/availabilityCheck'
    When method post
    * status 403
    * match response.control == {"type":"E","code":403,"message":"#regex[.*]"}

  Scenario: Not Found
    Given path '/availabilityCheckWrong'
    When method post
    * status 404
    * match response == {"control":{"type":"E","code":404,"message":"#regex[.*]"}

  Scenario: Too Many Requests - Exceeded Quota
    Given path '/availabilityCheck'
    * karate.repeat(1000,"ignore")
      """
      When method post
      """
    * status 429
    * match response == {"control":{"type":"E","code":429,"message":"#regex[.*]"}}

  Scenario: Internal Server Error
    Given path '/availabilityCheck'
    When method post
    * status 500
    * match response == {"control":{"type":"T","code":500,"message":"#regex[.*]"}

  Scenario: Service Unavailable and Gateway Timeout
    Given path '/availabilityCheck'
    When method post
    * match responseStatus in [503, 504]
    * match response == {"control":{"type":"T","code":"#(responseStatus)","message":"#regex[.*]"}}
