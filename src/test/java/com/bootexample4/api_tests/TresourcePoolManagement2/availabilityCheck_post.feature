# ********RoostGPT********

# Test generated by RoostGPT for test MiniProjects using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# Feature file generated for /availabilityCheck_post for http method type POST 
# RoostTestHash=81332360b2
# 
# 

# ********RoostGPT********
Feature: Availability check

  Background:
    * def urlBase = karate.properties['abcd_URL1_TRESOURCEPOOLMANAGEMENT__2__URL_BASE'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase
    * configure headers = { Authorization: '#(karate.properties['abcd_URL1_TRESOURCEPOOLMANAGEMENT__2__AUTH_TOKEN'])' }

  Scenario: Incremental scenario after analyzing source code
    Given path 'postAvailabilityCheck'
    And request { "customer": { "subscriberId": "SVTL001" }, "address": { "id": 14393, "complement": { "complements": [ { "type": "ES", "value": "ARC201" } ] } } }
    When method post
    Then status 200
    And match response == { "type": "S", "code": 200, "message": "successful operation" }

  Scenario: Check address error without complements
    Given path 'postAvailabilityCheck'
    And request { "customer": { "subscriberId": "SVTL001" }, "address": { "id": 2449 } }
    When method post
    Then status 400
    And match response == { "type": "E", "code": 400, "message": "Complemento obrigatório para o endereço informado." }
