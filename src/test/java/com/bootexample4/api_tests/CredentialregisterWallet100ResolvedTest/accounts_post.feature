# ********RoostGPT********

# Test generated by RoostGPT for test MiniProjects using AI Type Open AI and AI Model gpt-4-1106-preview
# 
# Feature file generated for /accounts_post for http method type POST 
# RoostTestHash=53e96f9805
# 
# 

# ********RoostGPT********
Feature: Create new Account

  Background:
    * def urlBase = karate.properties['CREDENTIAL_WALLET_URL_BASE'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase

  Scenario Outline: Create a new account with valid email and optional commit-hash header
    Given path '/accounts'
    And header commit-hash = '<commit_hash>'
    And request
      """
      {
        email: '<email>'
      }
      """
    When method post
    Then status 201
    And match header api-version == '1.0.0'
    And match header commit-hash == '<commit_hash>'
    And match response == '#object'

    Examples:
      | read('accounts_post.csv') |

  Scenario Outline: Create a new account with invalid email and receive Bad Request
    Given path '/accounts'
    And header commit-hash = '<commit_hash>'
    And request
      """
      {
        email: '<email>'
      }
      """
    When method post
    Then status 400
    And match header api-version == '1.0.0'
    And match response.description == 'Descriptive Error Message'
    And match response.error contains 'validation/'

    Examples:
      | commit_hash | email        |
      |     928d28d | not-an-email |
      | null        | invalid@     |

  Scenario: Create a new account without authorization token
    Given path '/accounts'
    And request
      """
      {
        email: 'user@test.com'
      }
      """
    When method post
    Then status 401
    And match response.description == 'Unauthorized'

  Scenario: Create a new account with authorization token
    * def AuthToken = karate.properties['CREDENTIAL_WALLET_AUTH_TOKEN']
    Given path '/accounts'
    And header Authorization = 'Bearer ' + AuthToken
    And request
      """
      {
        email: 'user@test.com'
      }
      """
    When method post
    Then status 201
    And match header api-version == '1.0.0'
    And match response == '#object'
