# ********RoostGPT********

# Test generated by RoostGPT for test MiniProjects using AI Type Open AI and AI Model gpt-4-1106-preview
# 
# Feature file generated for /accounts_post for http method type POST 
# RoostTestHash=53e96f9805
# 
# 

# ********RoostGPT********
Feature: Create new Account

  Background:
    * def urlBase = karate.properties['CREDENTIAL_WALLET_URL_BASE'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase

  Scenario Outline: Create a new account with valid email
    Given path '/accounts'
    And header commit-hash = '<commit_hash>'
    And request
      """
      { 
        email: '<email>' 
      }
      """
    When method post
    Then status 201
    And match responseHeaders['api-version'] == '1.0.0'
    And match responseHeaders['commit-hash'] == '<commit_hash>'

    Examples:
      | read('accounts_post.csv') |

  Scenario Outline: Create a new account with invalid email
    Given path '/accounts'
    And header commit-hash = '<commit_hash>'
    And request
      """
      { 
        email: '<email>' 
      }
      """
    When method post
    Then status 400
    And match responseHeaders['api-version'] == '1.0.0'
    And match response['error'] == '#string'
    And match response['description'] == '#string'

    Examples:
      | email       | commit_hash |
      | invalid@com |     928d28d |
      | user@.com   | b5da1af     |

  Scenario: Attempt to create an account without email
    Given path '/accounts'
    And header commit-hash = '928d28d'
    And request {}
    When method post
    Then status 400
    And match responseHeaders['api-version'] == '1.0.0'
    And match response['error'] == '#string'
    And match response['description'] == '#string'
