# ********RoostGPT********

# Test generated by RoostGPT for test MiniProjects using AI Type Claude AI and AI Model claude-3-5-haiku-20241022
# 
# ROOST_METHOD_HASH=8e4d2d5af2
# ROOST_METHOD_SIG_HASH=c6f6cb5f43
# 
#  ########## Scenario ########## 
# 
# {
#   feature: 'Feature: Product Management Functionality\n' +
#     '  As a user of the product management system\n' +
#     '  I want to interact with product-related operations\n' +
#     '  So that I can manage the product catalog effectively',
#   background: 'Background:\n' +
#     '    Given the Product Management API is up and running\n' +
#     '    And the product repository is initialized with test data',
#   rule: null,
#   scenario: {
#     title: 'Scenario: Validate product list attributes',
#     steps: 'When I send a GET request to "/products" endpoint using ProductController\n' +
#       'Then the response status code should be 200\n' +
#       'And each product in the response should have the following attributes:\n' +
#       '      | attribute    | type    |\n' +
#       '      | id           | Long    |\n' +
#       '      | name         | String  |\n' +
#       '      | description  | String  |\n' +
#       '      | price        | Double  |',
#     examples: ''
#   }
# }
# 

# ********RoostGPT********
Feature: Pet Store API Testing

  Background:
    * url 'https://petstore.swagger.io/v2'

  Scenario: Get Available Pets
    Given path '/pet/findByStatus'
    And param status = 'available'
    When method get
    Then status 200
    And match response[0].status == 'available'
    And assert response.length > 0

  Scenario Outline: Add a New Pet to the Store
    Given path '/pet'
    And request
      """
      {
        "id": <id>,
        "name": "<name>",
        "status": "<status>"
      }
      """
    When method post
    Then status 200
    And match response.name == "<name>"

    Examples:
      | id    | name     | status    |
      | 12345 | Buddy    | available |
      | 67890 | Whiskers | pending   |

  Scenario: Update an Existing Pet
    Given path '/pet'
    And request
      """
      {
        "id": 12345,
        "name": "Updated Pet Name",
        "status": "sold"
      }
      """
    When method put
    Then status 200
    And match response.name == "Updated Pet Name"

  Scenario: Delete a Pet
    Given path '/pet/12345'
    When method delete
    Then status 200
