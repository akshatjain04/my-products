# ********RoostGPT********

# Test generated by RoostGPT for test MiniProjects using AI Type Claude AI and AI Model claude-3-5-haiku-20241022
# 
# ROOST_METHOD_HASH=21cd1dad59
# ROOST_METHOD_SIG_HASH=96f24b112a
# 
#  ########## Scenario ########## 
# 
# {
#   feature: 'Feature: Product Management Functionality\n' +
#     '  As a user of the product management system\n' +
#     '  I want to interact with product-related operations\n' +
#     '  So that I can manage the product catalog effectively',
#   background: 'Background:\n' +
#     '    Given the Product Management API is up and running\n' +
#     '    And the product repository is initialized with test data',
#   rule: null,
#   scenario: {
#     title: 'Scenario: Retrieve product by valid ID',
#     steps: 'Given a product exists in the database with ID 1\n' +
#       'When I send a GET request to "/products/1" endpoint using ProductController\n' +
#       'Then the response status code should be 200\n' +
#       'And the response body should contain the product details for ID 1\n' +
#       'And the response should match the product with ID 1 in the database',
#     examples: ''
#   }
# }
# 

# ********RoostGPT********
Feature: Product Management Functionality

  Background:
    * def urlBase = karate.properties['url.base'] || 'http://localhost:4010'
    * url urlBase

  Scenario: Retrieve product by valid ID
    Given path '/pet/1'
    * def authToken = karate.properties['AUTH_TOKEN']
    * if (authToken) karate.headers = { 'Authorization': authToken }
    When method GET
    Then status 200
    And match response.id == 1
    And match response contains
      """
      {
          id: '#number',
          name: '#string',
          photoUrls: '#array',
          status: '#string'
      }
      """
    And assert response.id == 1
    And assert response.name != null
    And assert response.photoUrls != null
