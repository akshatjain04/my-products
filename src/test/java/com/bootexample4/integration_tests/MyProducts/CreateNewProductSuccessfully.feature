# ********RoostGPT********

# Test generated by RoostGPT for test MiniProjects using AI Type Claude AI and AI Model claude-3-5-haiku-20241022
# 
# ROOST_METHOD_HASH=819d3ecfd1
# ROOST_METHOD_SIG_HASH=fe07715bd1
# 
#  ########## Scenario ########## 
# 
# {
#   feature: 'Feature: Product Management Functionality\n' +
#     '  As a user of the product management system\n' +
#     '  I want to interact with product-related operations\n' +
#     '  So that I can manage the product catalog effectively',
#   background: 'Background:\n' +
#     '    Given the Product Management API is up and running\n' +
#     '    And the product repository is initialized with test data',
#   rule: null,
#   scenario: {
#     title: 'Scenario: Successfully create a new product',
#     steps: 'Given I have a valid product payload:\n' +
#       '      | name        | description           | price |\n' +
#       '      | Test Laptop | High-performance Dell | 999.99|\n' +
#       'When I send a POST request to "/products" endpoint using ProductController with the product payload\n' +
#       'Then the response status code should be 200\n' +
#       'And the response body should contain the created product details\n' +
#       'And the product should be saved in the database',
#     examples: ''
#   }
# }
# 

# ********RoostGPT********
Feature: Product Management Functionality

  Background:
    * def urlBase = karate.properties['url.base'] || 'http://localhost:4010'
    * url urlBase

  Scenario: Successfully create a new product
    * def productPayload =
      """
      {
          name: 'Test Laptop',
          photoUrls: ['https://example.com/laptop.jpg'],
          category: {
              name: 'Electronics',
              id: 1
          },
          status: 'available',
          tags: [
              {
                  name: 'High-performance',
                  id: 1
              }
          ]
      }
      """
    * def authToken = karate.properties['AUTH_TOKEN'] || ''
    * configure headers = { Authorization: '#(authToken)' }
    Given path '/pet'
    And request productPayload
    When method post
    Then status 200
    And match response.name == 'Test Laptop'
    And match response.category.name == 'Electronics'
    And match response.status == 'available'
    And match response contains
      """
      {
          id: '#number',
          name: '#string',
          status: '#string',
          category: '#object'
      }
      """
