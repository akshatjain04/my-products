# ********RoostGPT********

# Test generated by RoostGPT for test MiniProjects using AI Type Claude AI and AI Model claude-3-5-haiku-20241022
# 
# ROOST_METHOD_HASH=62a6a628af
# ROOST_METHOD_SIG_HASH=feea5de9c3
# 
#  ########## Scenario ########## 
# 
# {
#   feature: 'Feature: Product Management Functionality\n' +
#     '  As a user of the product management system\n' +
#     '  I want to interact with product-related operations\n' +
#     '  So that I can manage the product catalog effectively',
#   background: 'Background:\n' +
#     '    Given the Product Management API is up and running\n' +
#     '    And the product repository is initialized with test data',
#   rule: null,
#   scenario: {
#     title: 'Scenario: Ensure maximum performance for product retrieval',
#     steps: 'Given the product repository contains a large number of products\n' +
#       'When I send a GET request to "/products" endpoint using ProductController\n' +
#       'Then the response should be returned within 2 seconds',
#     examples: ''
#   }
# }
# 

# ********RoostGPT********
Feature: Product Management Functionality

  Background:
    * def urlBase = karate.properties['url.base'] || 'https://petstore.swagger.io/v2'
    * url urlBase

  Scenario: Ensure maximum performance for product retrieval
    Given path '/pet/findByStatus'
    And param status = 'available'
    * def startTime = java.lang.System.currentTimeMillis()
    When method GET
    * def endTime = java.lang.System.currentTimeMillis()
    * def responseTime = endTime - startTime
    Then status 200
    And match responseTime < 2000
    And assert responseTime < 2000, 'Response time exceeded 2 seconds: ' + responseTime + 'ms'
    And match response == '#array'
    And match each response contains { id: '#number', name: '#string' }
