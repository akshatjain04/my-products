{
  "item": [
    {
      "id": "13d9e0e8-b043-45f5-9c8d-65941fe12f38",
      "name": "accounts",
      "item": [
        {
          "id": "953ac387-a4cc-46e0-b98c-ad3db91acd35",
          "name": "Create new Account",
          "request": {
            "name": "Create new Account",
            "description": {
              "content": "You will receive an email with OTP",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "accounts"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "Commit Hash of Client Sowftware",
                "key": "commit-hash",
                "value": "{{commit-hash}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"{{email}}\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "50cf7d70-f1a5-4ed7-9dfa-329dd9bc6c3f",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "accounts"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": "Commit Hash of Client Sowftware",
                    "key": "commit-hash",
                    "value": "{{commit-hash}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"email\": \"{{email}}\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Created",
              "code": 201,
              "header": [
                {
                  "disabled": false,
                  "description": "API version",
                  "key": "api-version",
                  "value": "{{api-version}}"
                },
                {
                  "disabled": false,
                  "description": "Commit Hash",
                  "key": "commit-hash",
                  "value": "{{commit-hash}}"
                },
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": [],
              "_postman_previewlanguage": "text"
            },
            {
              "id": "d7a62d0e-8006-4616-9913-c6e13795ba58",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "accounts"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": "Commit Hash of Client Sowftware",
                    "key": "commit-hash",
                    "value": "{{commit-hash}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"email\": \"{{email}}\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "disabled": false,
                  "description": "API version",
                  "key": "api-version",
                  "value": "{{api-version}}"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"description\": \"Descriptive Error Message\",\n  \"error\": \"error/code\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  " \n// ********RoostGPT********\n/*\nTest generated by RoostGPT for test new-postman-test using AI Type Open AI and AI Model gpt-4\n\n\nTest generated for /accounts for http method type post in postman framework\n\n*/\n\n// ********RoostGPT********\n\n\nconst ld = require('lodash');\nlet responseData;\nconst contentType = pm.response.headers.get('Content-Type');\nif(contentType === \"application/xml\"){\n    var parseString = require('xml2js').parseString;\n    parseString(pm.response.body, function (err,result) {\n      if (err) {\n        console.error('Error parsing XML:', err);\n      } else {\n        responseData = result;  \n      }\n    });\n} else{\n    responseData = pm.response.json();\n}\nif (pm.variables.get(\"statusCode\")) {\n  // Compare the statusCode variable with the response code for assertion\n    pm.expect(parseInt(pm.variables.get(\"statusCode\"))).to.be.equal(pm.response.code);\n}\n\n// let responseTime = 800\n// pm.expect(pm.response.responseTime).to.be.below(responseTime);\n\nif (pm.response.code == 201){\n    pm.test(\"successful operation\", function () {\n        pm.expect(pm.response.status).to.be.eql(\"Created\");\n    });\n\n}\n\nif (pm.response.code == 400){\n    pm.test(\"Bad Request\", function () {\n        pm.expect(pm.response.status).to.be.eql(\"Bad Request\");\n    });\n\n}\n"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "5d002c4c-05c0-45e2-a21b-281de3b121e3",
          "name": "Login to existing Account",
          "request": {
            "name": "Login to existing Account",
            "description": {
              "content": "You will receive an email with OTP",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "accounts"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PATCH",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"{{email}}\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "52aa2af3-a623-4e5b-8936-a56225924e90",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "accounts"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"email\": \"{{email}}\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "disabled": false,
                  "description": "API version",
                  "key": "api-version",
                  "value": "{{api-version}}"
                },
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": [],
              "_postman_previewlanguage": "text"
            },
            {
              "id": "ab013595-b54e-452f-a13c-ee09dd798714",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "accounts"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"email\": \"{{email}}\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "disabled": false,
                  "description": "API version",
                  "key": "api-version",
                  "value": "{{api-version}}"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"description\": \"Descriptive Error Message\",\n  \"error\": \"error/code\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  " \n// ********RoostGPT********\n/*\nTest generated by RoostGPT for test new-postman-test using AI Type Open AI and AI Model gpt-4\n\n\nTest generated for /accounts for http method type patch in postman framework\n\n*/\n\n// ********RoostGPT********\n\n\nconst ld = require('lodash');\nlet responseData;\nconst contentType = pm.response.headers.get('Content-Type');\nif(contentType === \"application/xml\"){\n    var parseString = require('xml2js').parseString;\n    parseString(pm.response.body, function (err,result) {\n      if (err) {\n        console.error('Error parsing XML:', err);\n      } else {\n        responseData = result;  \n      }\n    });\n} else{\n    responseData = pm.response.json();\n}\nif (pm.variables.get(\"statusCode\")) {\n  // Compare the statusCode variable with the response code for assertion\n    pm.expect(parseInt(pm.variables.get(\"statusCode\"))).to.be.equal(pm.response.code);\n}\n\n// let responseTime = 800\n// pm.expect(pm.response.responseTime).to.be.below(responseTime);\n\nif (pm.response.code == 200){\n    pm.test(\"successful operation\", function () {\n        pm.expect(pm.response.status).to.be.eql(\"OK\");\n    });\n\n}\n\nif (pm.response.code == 400){\n    pm.test(\"Bad Request\", function () {\n        pm.expect(pm.response.status).to.be.eql(\"Bad Request\");\n    });\n\n}\n"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    null,
    null,
    {
      "id": "a409b8be-3dfb-4aed-9ad3-cb753e758819",
      "name": "me",
      "item": [
        null,
        null
      ],
      "event": []
    },
    {
      "id": "67ad9947-25c7-40b0-9829-ebd52e920fc5",
      "name": "credentials",
      "item": [
        null,
        {
          "id": "1c5670cf-5d0a-4623-aa81-3cc55ba960bb",
          "name": "{id}",
          "item": [
            null,
            null
          ],
          "event": []
        }
      ],
      "event": []
    },
    null,
    {
      "id": "58e8dbcc-0697-4b3f-af77-cd68d9b89b1c",
      "name": "authorizations",
      "item": [
        null,
        null,
        null
      ],
      "event": []
    },
    {
      "id": "7157c487-a1d5-4296-a456-66e638307a66",
      "name": "apikeys",
      "item": [
        null,
        null,
        null
      ],
      "event": []
    },
    {
      "id": "2ed9588e-c643-4dbf-a4c6-1fb3d54dd0a2",
      "name": "recipients",
      "item": [
        {
          "id": "dd2f0a18-9f3d-4600-b03e-7fa3ffb536d1",
          "name": "branches",
          "item": [
            null,
            null,
            {
              "id": "7bcd3f28-ec19-4764-8b77-21ebd25a1008",
              "name": "{id}",
              "item": [
                null,
                null,
                null,
                {
                  "id": "6ef0f45b-d92a-4115-8255-55fe5e0ba689",
                  "name": "registrations",
                  "item": [
                    null,
                    null
                  ],
                  "event": []
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        {
          "id": "c99410ce-6054-4e8f-9e7d-92d8df23cc65",
          "name": "persons",
          "item": [
            null,
            null,
            {
              "id": "955213d4-3d5d-4ca0-87ce-1a39ef7d591f",
              "name": "{id}",
              "item": [
                null,
                null,
                null,
                {
                  "id": "3501b7e8-6fa7-49b2-be8b-47f090ba0f8d",
                  "name": "registrations",
                  "item": [
                    null,
                    null
                  ],
                  "event": []
                }
              ],
              "event": []
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "98a2cb39-b40a-4fcf-accf-a74035d8a973",
      "name": "registrations",
      "item": [
        null,
        {
          "id": "3c5f54da-d05c-46a4-88dc-5890fe781f49",
          "name": "{id}",
          "item": [
            null,
            null,
            null
          ],
          "event": []
        }
      ],
      "event": []
    },
    null,
    null
  ],
  "event": [],
  "variable": [
    {
      "type": "string",
      "value": "https://virtserver.swaggerhub.com/credentialregister/wallet/1.0.0",
      "key": "baseUrl"
    },
    {
      "type": "integer",
      "value": 200,
      "key": "statusCode"
    }
  ],
  "info": {
    "_postman_id": "065e8242-10be-4e9c-8477-3a60acc0f48a",
    "name": "Wallet API",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "The Wallet API of the Credential Register.",
      "type": "text/plain"
    }
  }
}