# Test generated by RoostGPT for test go-test using AI Type Open AI and AI Model gpt-4

config:
  target: "http://localhost:3000"
  phases:
    - duration: 60
      arrivalRate: 20
  payload:
    path: "test_data.csv"
    fields:
      - "productId"
      - "productName"
      - "productPrice"

scenarios:
  - name: "Successful API request"
    flow:
      - post:
          url: "/api/products"
          json:
            id: "{{ productId }}"
            name: "{{ productName }}"
            price: "{{ productPrice }}"
          capture:
            json: "$.message"
            as: "message"
          expect:
            - statusCode: 200
            - equals:
                - "{{ message }}"
                - "Product added successfully"

  - name: "API request with validation failure"
    flow:
      - post:
          url: "/api/products"
          json:
            id: "{{ productId }}"
            name: ""
            price: "{{ productPrice }}"
          capture:
            json: "$.error"
            as: "error"
          expect:
            - statusCode: 400
            - equals:
                - "{{ error }}"
                - "Product name is required"

  - name: "API request with edge case"
    flow:
      - post:
          url: "/api/products"
          json:
            id: "{{ productId }}"
            name: "{{ productName }}"
            price: 9999999999
          capture:
            json: "$.message"
            as: "message"
          expect:
            - statusCode: 200
            - equals:
                - "{{ message }}"
                - "Product added successfully"

  - name: "API request with query parameters"
    flow:
      - get:
          url: "/api/products?id={{ productId }}"
          expect:
            - statusCode: 200
            - hasProperty: "name"
            - hasProperty: "price"

  - name: "API request with authorization"
    flow:
      - post:
          url: "/api/products"
          json:
            id: "{{ productId }}"
            name: "{{ productName }}"
            price: "{{ productPrice }}"
          headers:
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
          capture:
            json: "$.message"
            as: "message"
          expect:
            - statusCode: 200
            - equals:
                - "{{ message }}"
                - "Product added successfully"
