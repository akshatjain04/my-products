# Test generated by RoostGPT for test credential-wallet-api-akshat using AI Type Vertex AI and AI Model code-bison-32k


# Test generated for /credentials/{id}_get for http method type GET in artillery framework

# RoostTestHash=c02d3561ab


# Artillery test script for API testing
config:
  target: {{ $processEnvironment.API_HOST }} # Target URL from environment variable
  expect: true # Enable the 'expect' plugin
  insecure: true # Allow insecure HTTPS connections

scenarios:
  - flow:
      # Get a credential with a valid ID
      - get:
          url: /credentials/{{ credentials_id_get_success.id }}
          headers:
            Token: {{$processEnvironment.AUTH_TOKEN}} # Authorization token from environment variable
          expect:
            - statusCode: 200
            - contentType: application/json
            - hasProperty: id
            - hasProperty: format
            - hasProperty: credential
            - hasProperty: status
            - hasProperty: statusUpdatedAt
            - hasProperty: createdAt
      - think: 500 # Wait for 500ms before the next request

      # Post a new credential
      - post:
          url: /credentials
          headers:
            Token: {{$processEnvironment.AUTH_TOKEN}} # Authorization token from environment variable
            Content-Type: application/json
          payload:
            id: {{ credentials_id_post_success.id }}
            format: {{ credentials_id_post_success.format }}
            credential: {{ credentials_id_post_success.credential }}
            status: {{ credentials_id_post_success.status }}
            statusUpdatedAt: {{ credentials_id_post_success.statusUpdatedAt }}
            createdAt: {{ credentials_id_post_success.createdAt }}
          expect:
            - statusCode: 201
            - contentType: application/json
            - hasProperty: id
            - hasProperty: format
            - hasProperty: credential
            - hasProperty: status
            - hasProperty: statusUpdatedAt
            - hasProperty: createdAt
      - think: 500 # Wait for 500ms before the next request

      # Patch a credential with a valid ID
      - patch:
          url: /credentials/{{ credentials_id_patch_success.id }}
          headers:
            Token: {{$processEnvironment.AUTH_TOKEN}} # Authorization token from environment variable
            Content-Type: application/json
          payload:
            id: {{ credentials_id_patch_success.id }}
            format: {{ credentials_id_patch_success.format }}
            credential: {{ credentials_id_patch_success.credential }}
            status: {{ credentials_id_patch_success.status }}
            statusUpdatedAt: {{ credentials_id_patch_success.statusUpdatedAt }}
            createdAt: {{ credentials_id_patch_success.createdAt }}
          expect:
            - statusCode: 200
            - contentType: application/json
            - hasProperty: id
            - hasProperty: format
            - hasProperty: credential
            - hasProperty: status
            - hasProperty: statusUpdatedAt
            - hasProperty: createdAt
      - think: 500 # Wait for 500ms before the next request

      # Delete a credential with a valid ID
      - delete:
          url: /credentials/{{ credentials_id_delete_success.id }}
          headers:
            Token: {{$processEnvironment.AUTH_TOKEN}} # Authorization token from environment variable
          expect:
            - statusCode: 204
      - think: 500 # Wait for 500ms before the next request

payload:
  credentials_id_get_success.csv:
    skipHeader: true
    fields:
      - id
  credentials_id_post_success.csv:
    skipHeader: true
    fields:
      - id
      - format
      - credential
      - status
      - statusUpdatedAt
      - createdAt
  credentials_id_patch_success.csv:
    skipHeader: true
    fields:
      - id
      - format
      - credential
      - status
      - statusUpdatedAt
      - createdAt
  credentials_id_delete_success.csv:
    skipHeader: true
    fields:
      - id
