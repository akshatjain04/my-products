# Test generated by RoostGPT for test go-test using AI Type Open AI and AI Model gpt-4

config:
  target: "https://{{ $processEnvironment.hostname }}/certainExternal/service/v1/Profile/:accountCode"
  phases:
    - duration: 60
      arrivalRate: 20
  payload:
    path: "certainExternal_POST_168966703.csv"
    fields:
      - "accountCode"
  defaults:
    headers:
      Content-Type: "application/json"
    auth:
      username: "{{ $processEnvironment.Username }}"
      password: "{{ $processEnvironment.Password }}"

scenarios:
  - name: "Successful API request"
    flow:
      - post:
          url: "/certainExternal/service/v1/Profile/:accountCode"
          json:
            profileId: 992
            uuid: "uuidXYZ"
            dateCreated: "2023-07-05T06:42:40"
            dateModified: "2023-07-05T06:42:40"
            externalKey: "externalKeyXYZ"
            isActive: true
            prefix: "prefixXYZ"
            suffix: "suffixXYZ"
            firstName: "firstNameXYZ"
            middleName: "middleNameXYZ"
            lastName: "lastNameXYZ"
            badgeName: "badgeNameXYZ"
            dob: "2023-07-05T06:42:40"
            position: "positionXYZ"
            organization: "organizationXYZ"
            phone: "phoneXYZ"
            phone2: "phone2XYZ"
            phoneMobile: "phoneMobileXYZ"
            fax: "faxXYZ"
            email: "emailXYZ"
            ccAssistantOnEmails: true
            ccAssociateOnEmails: true
            accountCode: "accountCodeXYZ"
            profilePin: "profilePinXYZ"
            pkProfileId: "pkProfileIdXYZ"
            showOnline: true
            imported: true
            source: "sourceXYZ"
            media:
              url: "urlXYZ"
              photo: "photoXYZ"
            socialMedias:
              - type: "typeXYZ"
                url: "urlXYZ"
            privatePersonal:
              dob: "2023-07-05T06:42:40"
              gender: "genderXYZ"
            assistant:
              assistantName: "assistantNameXYZ"
              assistantEmail: "assistantEmailXYZ"
              assistantPhone: "assistantPhoneXYZ"
            travel:
              loginId: "loginIdXYZ"
              freqFlyerProgram: "freqFlyerProgramXYZ"
              freqFlyerNumber: "freqFlyerNumberXYZ"
              seatPreference: "seatPreferenceXYZ"
              passportNumber: "passportNumberXYZ"
              passportFirstName: "passportFirstNameXYZ"
              passportLastName: "passportLastNameXYZ"
              passportCountry: "passportCountryXYZ"
              passportExpirationDate: "2023-07-05T06:42:40"
            associate:
              associateName: "associateNameXYZ"
              associateEmail: "associateEmailXYZ"
              associatePhone: "associatePhoneXYZ"
            notes: "notesXYZ"
            address:
              line1: "line1XYZ"
              line2: "line2XYZ"
              line3: "line3XYZ"
              line4: "line4XYZ"
              city: "cityXYZ"
              state: "stateXYZ"
              intlState: "intlStateXYZ"
              countryCode: "countryCodeXYZ"
              country: "countryXYZ"
              postalCode: "postalCodeXYZ"
            altAddress:
              line1: "line1XYZ"
              line2: "line2XYZ"
              line3: "line3XYZ"
              line4: "line4XYZ"
              city: "cityXYZ"
              state: "stateXYZ"
              intlState: "intlStateXYZ"
              countryCode: "countryCodeXYZ"
              country: "countryXYZ"
              postalCode: "postalCodeXYZ"
            shipAddress:
              line1: "line1XYZ"
              line2: "line2XYZ"
              line3: "line3XYZ"
              line4: "line4XYZ"
              city: "cityXYZ"
              state: "stateXYZ"
              intlState: "intlStateXYZ"
              countryCode: "countryCodeXYZ"
              country: "countryXYZ"
              postalCode: "postalCodeXYZ"
            profileQuestions:
              question:
                - questionField: "questionFieldXYZ"
                  questionId: 197
                  questionCode: "questionCodeXYZ"
                  questionName: "questionNameXYZ"
                  answers:
                    answer:
                      - answerId: 143
                        answerCode: "answerCodeXYZ"
                        value: "valueXYZ"
                        answerValue: "answerValueXYZ"
            password: "passwordXYZ"
            events:
              event:
                - registrationCode: "registrationCodeXYZ"
                  eventCode: "eventCodeXYZ"
                  eventName: "eventNameXYZ"
            dataPrivacyPolicies:
              policy:
                - policyType: "policyTypeXYZ"
                  externalId: "externalIdXYZ"
                  privacyComplianceDate: "2023-07-05T06:42:40"
                  entryPoint: "entryPointXYZ"
            integrationExternalKeys:
              - externalKey: "externalKeyXYZ"
                connectionUuid: "connectionUuidXYZ"
                isActive: true
                isPrimary: true
                actionTypeCode: "actionTypeCodeXYZ"
                dateCreated: "2023-07-05T06:42:40"
                dateModified: "2023-07-05T06:42:40"
          expect:
            - statusCode: 200
