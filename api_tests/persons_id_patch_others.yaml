# Test generated by RoostGPT for test credential-wallet-api-akshat using AI Type Vertex AI and AI Model code-bison-32k


# RoostTestHash=1416aa2295

scenario:
  - get:
      url: https://{{ $processEnvironment.API_HOST }}/recipients/persons/invalid-uuid
      expect:
        - statusCode: 400
        - hasHeader: api-version
        - headerEquals: api-version: 1.0.0
        - contentType: application/json
        - hasProperty: error
        - hasProperty: description
        - notHasProperty: value
        - notHasProperty: schema_field
        - notHasProperty: field
        - matchesRegexp: error: validation/uuid-format
        - matchesRegexp: description: Invalid UUID format
    - think: 1000
  - post:
      url: https://{{ $processEnvironment.API_HOST }}/recipients/persons
      headers:
        Token: {{$processEnvironment.AUTH_TOKEN}}
      payload:
        initials: "invalid"
      expect:
        - statusCode: 400
        - hasHeader: api-version
        - headerEquals: api-version: 1.0.0
        - contentType: application/json
        - hasProperty: error
        - hasProperty: description
        - notHasProperty: value
        - notHasProperty: schema_field
        - notHasProperty: field
        - matchesRegexp: error: validation/initials-pattern
        - matchesRegexp: description: Initials must be between 1 and 6 uppercase letters
    - think: 1000
  - patch:
      url: https://{{ $processEnvironment.API_HOST }}/recipients/persons/invalid-uuid
      headers:
        Token: {{$processEnvironment.AUTH_TOKEN}}
      payload:
        email: "invalid-email"
      expect:
        - statusCode: 400
        - hasHeader: api-version
        - headerEquals: api-version: 1.0.0
        - contentType: application/json
        - hasProperty: error
        - hasProperty: description
        - notHasProperty: value
        - notHasProperty: schema_field
        - notHasProperty: field
        - matchesRegexp: error: validation/email-pattern
        - matchesRegexp: description: Invalid email format
    - think: 1000
  - delete:
      url: https://{{ $processEnvironment.API_HOST }}/recipients/persons/invalid-uuid
      headers:
        Token: {{$processEnvironment.AUTH_TOKEN}}
      expect:
        - statusCode: 400
        - hasHeader: api-version
        - headerEquals: api-version: 1.0.0
        - contentType: application/json
        - hasProperty: error
        - hasProperty: description
        - notHasProperty: value
        - notHasProperty: schema_field
        - notHasProperty: field
        - matchesRegexp: error: validation/uuid-format
        - matchesRegexp: description: Invalid UUID format
config:
  target: {{ $processEnvironment.API_HOST }}
  payload:
    csv: persons_id_patch_others.csv
    skipHeader: true
  security:
    ApiKeyAuth:
      type: apiKey
      name: Token
      in: header
      value: {{$processEnvironment.AUTH_TOKEN}}
  plugins:
    expect: true
