# Test generated by RoostGPT for test go-test using AI Type Open AI and AI Model gpt-4

config:
  target: "{{ $processEnvironment.SERVER_URL }}"
  phases:
    - duration: 60
      arrivalRate: 20

scenarios:
  - name: "Successful API request"
    flow:
      - post:
          url: "/pet/{{ petId }}/uploadImage"
          formData:
            additionalMetadata: "Test data"
            file: "example.jpg"
          headers:
            Authorization: "Bearer {{ $processEnvironment.token }}"
          capture:
            - json: "$.code"
              as: "response_code"
            - json: "$.type"
              as: "response_type"
            - json: "$.message"
              as: "response_message"
          expect:
            - statusCode: 200
            - equals: 
                - "{{ response_code }}"
                - 200
            - equals: 
                - "{{ response_type }}"
                - "OK"
            - equals: 
                - "{{ response_message }}"
                - "Image uploaded successfully"

  - name: "API request with validation failure"
    flow:
      - post:
          url: "/pet/{{ petId }}/uploadImage"
          formData:
            additionalMetadata: "Test data"
          headers:
            Authorization: "Bearer {{ $processEnvironment.token }}"
          capture:
            - json: "$.code"
              as: "response_code"
            - json: "$.type"
              as: "response_type"
            - json: "$.message"
              as: "response_message"
          expect:
            - statusCode: 400
            - equals: 
                - "{{ response_code }}"
                - 400
            - equals: 
                - "{{ response_type }}"
                - "Bad Request"
            - equals: 
                - "{{ response_message }}"
                - "Missing file for upload"

  - name: "API request with edge case"
    flow:
      - post:
          url: "/pet/{{ petId }}/uploadImage"
          formData:
            additionalMetadata: "Test data"
            file: "{{ large_file }}"
          headers:
            Authorization: "Bearer {{ $processEnvironment.token }}"
          capture:
            - json: "$.code"
              as: "response_code"
            - json: "$.type"
              as: "response_type"
            - json: "$.message"
              as: "response_message"
          expect:
            - statusCode: 
                - in: [200, 201, 202]
            - equals: 
                - "{{ response_code }}"
                - 200
            - equals: 
                - "{{ response_type }}"
                - "OK"
            - matches: 
                - "{{ response_message }}"
                - "/Image uploaded successfully/"
