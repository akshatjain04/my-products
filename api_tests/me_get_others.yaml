# Test generated by RoostGPT for test credential-wallet-api-akshat using AI Type Vertex AI and AI Model code-bison-32k


# RoostTestHash=ae6b8ce5ab

---
config:
  target: {{ $processEnvironment.API_HOST }}
  expect:
    enabled: true
  payload:
    file: me_get_others.csv
    skipHeader: true
    fields:
      - id
      - firstName
      - lastName
      - email
      - phone
      - password
  securitySchemes:
    ApiKeyAuth:
      type: 'apiKey'
      name: 'Token'
      in: 'header'
scenarios:
  - scenario: Failure-Inducing Requests
    flow:
      - get:
          url: /me
          headers:
            Token: {{$processEnvironment.AUTH_TOKEN}}
          expect:
            statusCode: 400
            contentType: application/json
            hasProperty: description
            hasProperty: error
            jmespath: 'error == "error/code"'
            jmespath: 'description == "Descriptive Error Message"'
          log: Requesting account details with invalid authorization
          think: 500
      - post:
          url: /me
          headers:
            Token: {{$processEnvironment.AUTH_TOKEN}}
            Content-Type: application/json
          payload:
            firstName: {{$processEnvironment.FIRSTNAME}}
            lastName: {{$processEnvironment.LASTNAME}}
            email: {{$processEnvironment.EMAIL}}
            phone: {{$processEnvironment.PHONE}}
            password: {{$processEnvironment.PASSWORD}}
          expect:
            statusCode: 400
            contentType: application/json
            hasProperty: description
            hasProperty: error
            jmespath: 'error == "validation/email-pattern"'
            jmespath: 'description == "Descriptive Error Message"'
          log: Creating account with invalid email format
          think: 500
      - delete:
          url: /me
          headers:
            Token: {{$processEnvironment.AUTH_TOKEN}}
          expect:
            statusCode: 404
            contentType: application/json
            hasProperty: description
            hasProperty: error
            jmespath: 'error == "error/code"'
            jmespath: 'description == "Descriptive Error Message"'
          log: Deleting account with non-existent id
          think: 500
      - get:
          url: /me/non-existent-endpoint
          headers:
            Token: {{$processEnvironment.AUTH_TOKEN}}
          expect:
            statusCode: 404
            contentType: application/json
            hasProperty: description
            hasProperty: error
            jmespath: 'error == "error/code"'
            jmespath: 'description == "Descriptive Error Message"'
          log: Requesting non-existent endpoint
