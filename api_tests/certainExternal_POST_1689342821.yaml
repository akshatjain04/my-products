# Test generated by RoostGPT for test go-test using AI Type Open AI and AI Model gpt-4

config:
  target: "{{ $processEnvironment.SERVER_URL }}"
  phases:
    - duration: 60
      arrivalRate: 20

scenarios:
  - name: "Successful API request"
    flow:
      - get:
          url: "/certainExternal/service/v1/Profile/{{ accountCode }}"
          headers:
            Content-Type: "application/json"
          expect:
            - statusCode: 200
            - hasProperty: "data"

  - name: "API request with validation failure"
    flow:
      - get:
          url: "/certainExternal/service/v1/Profile/INVALID"
          headers:
            Content-Type: "application/json"
          expect:
            - statusCode: 400
            - hasProperty: "error"
            - equals: 
                error: "Invalid Account Code"

  - name: "API request with edge case"
    flow:
      - get:
          url: "/certainExternal/service/v1/Profile/{{ accountCode }}"
          headers:
            Content-Type: "application/json"
          qs:
            largeData: "true"
          expect:
            - statusCode: 200
            - hasProperty: "data"

  - name: "API request with authentication"
    flow:
      - get:
          url: "/certainExternal/service/v1/Profile/{{ accountCode }}"
          headers:
            Content-Type: "application/json"
            Authorization: "Bearer {{ authToken }}"
          expect:
            - statusCode: 200
            - hasProperty: "data"

  - name: "API request with authorization"
    flow:
      - get:
          url: "/certainExternal/service/v1/Profile/{{ accountCode }}"
          headers:
            Content-Type: "application/json"
            Authorization: "Bearer {{ authToken }}"
          expect:
            - statusCode: 200
            - hasProperty: "data"

  - name: "API request with query parameters"
    flow:
      - get:
          url: "/certainExternal/service/v1/Profile/{{ accountCode }}"
          headers:
            Content-Type: "application/json"
          qs:
            filter: "active"
          expect:
            - statusCode: 200
            - hasProperty: "data"
