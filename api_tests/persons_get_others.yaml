# Test generated by RoostGPT for test credential-wallet-api-akshat using AI Type Vertex AI and AI Model code-bison-32k


# RoostTestHash=aa0a5d4980

---
config:
  target: {{ $processEnvironment.API_HOST }}
  expect: enabled
  payload:
    file: persons_get_others.csv
    skipHeader: true
    fields:
      - id
      - name
      - birth_date
      - email
  security:
    ApiKeyAuth:
      type: apiKey
      name: Token
      in: header
      value: {{$processEnvironment.AUTH_TOKEN}}
scenarios:
  - scenario: Failure cases
    flow:
      - get:
          url: /recipients/persons
          description: "Get persons without any query parameters"
          headers:
            Authorization: Token {{$processEnvironment.AUTH_TOKEN}}
          expect:
            statusCode: 400
            contentType: application/json
            hasProperty: error
            hasProperty: description
      - get:
          url: /recipients/persons?size=1001
          description: "Get persons with 'size' query parameter exceeding the maximum allowed value"
          headers:
            Authorization: Token {{$processEnvironment.AUTH_TOKEN}}
          expect:
            statusCode: 400
            contentType: application/json
            hasProperty: error
            hasProperty: description
      - get:
          url: /recipients/persons?offset=-11
          description: "Get persons with 'offset' query parameter less than the minimum allowed value"
          headers:
            Authorization: Token {{$processEnvironment.AUTH_TOKEN}}
          expect:
            statusCode: 400
            contentType: application/json
            hasProperty: error
            hasProperty: description
      - get:
          url: /recipients/persons?name=John%20Doe
          description: "Get persons with 'name' query parameter containing special characters"
          headers:
            Authorization: Token {{$processEnvironment.AUTH_TOKEN}}
          expect:
            statusCode: 400
            contentType: application/json
            hasProperty: error
            hasProperty: description
      - get:
          url: /recipients/persons?birth-date=2023-02-29
          description: "Get persons with 'birth-date' query parameter set to an invalid date"
          headers:
            Authorization: Token {{$processEnvironment.AUTH_TOKEN}}
          expect:
            statusCode: 400
            contentType: application/json
            hasProperty: error
            hasProperty: description
      - get:
          url: /recipients/persons?nonexistent-parameter=value
          description: "Get persons with a non-existent query parameter"
          headers:
            Authorization: Token {{$processEnvironment.AUTH_TOKEN}}
          expect:
            statusCode: 400
            contentType: application/json
            hasProperty: error
            hasProperty: description
      - get:
          url: https://incorrect-url.com/recipients/persons
          description: "Get persons using an invalid URL"
          expect:
            notStatusCode: 200
