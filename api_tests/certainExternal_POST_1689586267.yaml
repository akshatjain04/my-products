# Test generated by RoostGPT for test go-test using AI Type Open AI and AI Model gpt-4

config:
  target: "https://{{ $processEnvironment.hostname }}"
  processor: "./my-processor.js"
  phases:
    - duration: 60
      arrivalRate: 5
  payload:
    path: "./data.csv"
    fields:
      - "accountCode"
      - "profileId"
      - "uuid"
      - "dateCreated"
      - "dateModified"
      - "externalKey"
      - "isActive"
      - "prefix"
      - "suffix"
      - "firstName"
      - "middleName"
      - "lastName"
      - "badgeName"
      - "dob"
      - "position"
      - "organization"
      - "phone"
      - "phone2"
      - "phoneMobile"
      - "fax"
      - "email"
      - "ccAssistantOnEmails"
      - "ccAssociateOnEmails"
      - "profilePin"
      - "pkProfileId"
      - "showOnline"
      - "imported"
      - "source"
      - "media"
      - "socialMedias"
      - "privatePersonal"
      - "assistant"
      - "travel"
      - "associate"
      - "notes"
      - "address"
      - "altAddress"
      - "shipAddress"
      - "profileQuestions"
      - "password"
      - "events"
      - "dataPrivacyPolicies"
      - "integrationExternalKeys"
scenarios:
  - name: "Successful API request"
    flow:
      - post:
          url: "/certainExternal/service/v1/Profile/:accountCode"
          json:
            profileId: "{{ profileId }}"
            uuid: "{{ uuid }}"
            dateCreated: "{{ dateCreated }}"
            dateModified: "{{ dateModified }}"
            externalKey: "{{ externalKey }}"
            isActive: "{{ isActive }}"
            prefix: "{{ prefix }}"
            suffix: "{{ suffix }}"
            firstName: "{{ firstName }}"
            middleName: "{{ middleName }}"
            lastName: "{{ lastName }}"
            badgeName: "{{ badgeName }}"
            dob: "{{ dob }}"
            position: "{{ position }}"
            organization: "{{ organization }}"
            phone: "{{ phone }}"
            phone2: "{{ phone2 }}"
            phoneMobile: "{{ phoneMobile }}"
            fax: "{{ fax }}"
            email: "{{ email }}"
            ccAssistantOnEmails: "{{ ccAssistantOnEmails }}"
            ccAssociateOnEmails: "{{ ccAssociateOnEmails }}"
            profilePin: "{{ profilePin }}"
            pkProfileId: "{{ pkProfileId }}"
            showOnline: "{{ showOnline }}"
            imported: "{{ imported }}"
            source: "{{ source }}"
            media: "{{ media }}"
            socialMedias: "{{ socialMedias }}"
            privatePersonal: "{{ privatePersonal }}"
            assistant: "{{ assistant }}"
            travel: "{{ travel }}"
            associate: "{{ associate }}"
            notes: "{{ notes }}"
            address: "{{ address }}"
            altAddress: "{{ altAddress }}"
            shipAddress: "{{ shipAddress }}"
            profileQuestions: "{{ profileQuestions }}"
            password: "{{ password }}"
            events: "{{ events }}"
            dataPrivacyPolicies: "{{ dataPrivacyPolicies }}"
            integrationExternalKeys: "{{ integrationExternalKeys }}"
          headers:
            Content-Type: "application/json"
          expect:
            - statusCode: 200
  - name: "API request with validation failure"
    flow:
      - post:
          url: "/certainExternal/service/v1/Profile/:accountCode"
          json:
            profileId: "invalid"
          headers:
            Content-Type: "application/json"
          expect:
            - statusCode: 400
  - name: "API request with edge case"
    flow:
      - post:
          url: "/certainExternal/service/v1/Profile/:accountCode"
          json:
            profileId: "{{ profileId }}"
          headers:
            Content-Type: "application/json"
          expect:
            - statusCode: 200
  - name: "API request with query parameters"
    flow:
      - post:
          url: "/certainExternal/service/v1/Profile/:accountCode?queryParam=value"
          json:
            profileId: "{{ profileId }}"
          headers:
            Content-Type: "application/json"
          expect:
            - statusCode: 200
  - name: "API request with authorization"
    flow:
      - post:
          url: "/certainExternal/service/v1/Profile/:accountCode"
          json:
            profileId: "{{ profileId }}"
          headers:
            Content-Type: "application/json"
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 200
