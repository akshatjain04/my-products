# Test generated by RoostGPT for test go-test using AI Type Open AI and AI Model gpt-4

config:
  target: "https://{{ $processEnvironment.hostname }}/certainExternal/service/v1/Profile"
  phases:
    - duration: 60
      arrivalRate: 20
  payload:
    path: "certainExternal_GET_168966696.csv"
    fields:
      - "accountCode"
  environments:
    production:
      target: "https://prod.example.com"
      http:
        auth:
          username: "{{ $processEnvironment.Username }}"
          password: "{{ $processEnvironment.Password }}"
scenarios:
  - name: "Successful API request"
    flow:
      - get:
          url: "/certainExternal/service/v1/Profile/:accountCode"
          capture:
            json: "$.profiles[0]"
            as: "response"
          expect:
            - statusCode: 200
            - hasProperty: ["response.profileId", "response.uuid", "response.dateCreated"]
  - name: "API request with validation failure"
    flow:
      - get:
          url: "/certainExternal/service/v1/Profile/invalidAccountCode"
          expect:
            - statusCode: 400
  - name: "API request with edge case"
    flow:
      - get:
          url: "/certainExternal/service/v1/Profile/!@#$%^&*()_+"
          expect:
            - statusCode: 500
  - name: "API request with query parameters"
    flow:
      - get:
          url: "/certainExternal/service/v1/Profile/:accountCode?filterBy=value"
          expect:
            - statusCode: 200
            - hasProperty: ["response.profileId", "response.uuid", "response.dateCreated"]
  - name: "API request with authorization"
    flow:
      - get:
          url: "/certainExternal/service/v1/Profile/:accountCode"
          headers:
            Authorization: "Bearer {{ $processEnvironment.authToken }}"
          expect:
            - statusCode: 200
            - hasProperty: ["response.profileId", "response.uuid", "response.dateCreated"]
