# Test generated by RoostGPT for test go-test using AI Type Open AI and AI Model gpt-4

config:
  target: "{{ $processEnvironment.SERVER_URL }}"
  phases:
    - duration: 60
      arrivalRate: 20
  variables:
    accountCode: ["account1", "account2", "account3"]
    profilePin: ["pin1", "pin2", "pin3"]

scenarios:
  - name: "Successful API request"
    flow:
      - get:
          url: "/certainExternal/service/v1/Profile/{{ accountCode }}/{{ profilePin }}"
          headers:
            Content-Type: "application/json"
          expect:
            - statusCode: 200
            - hasProperty: "data"

  - name: "API request with validation failure"
    flow:
      - get:
          url: "/certainExternal/service/v1/Profile/{{ accountCode }}/"
          headers:
            Content-Type: "application/json"
          expect:
            - statusCode: 400
            - hasProperty: "errorMessage"

  - name: "API request with edge case"
    flow:
      - get:
          url: "/certainExternal/service/v1/Profile/{{ accountCode }}/{{ profilePin }}"
          headers:
            Content-Type: "application/json"
          expect:
            - statusCode: 200
            - hasProperty: "data"
            - equals: ["data", "largeData"]

  - name: "API request with authentication"
    flow:
      - get:
          url: "/certainExternal/service/v1/Profile/{{ accountCode }}/{{ profilePin }}"
          headers:
            Content-Type: "application/json"
            Authorization: "Bearer valid_token"
          expect:
            - statusCode: 200
            - hasProperty: "data"

  - name: "API request with authorization"
    flow:
      - get:
          url: "/certainExternal/service/v1/Profile/{{ accountCode }}/{{ profilePin }}"
          headers:
            Content-Type: "application/json"
            Authorization: "Bearer valid_token_with_authorization"
          expect:
            - statusCode: 200
            - hasProperty: "data"

  - name: "API request with query parameters"
    flow:
      - get:
          url: "/certainExternal/service/v1/Profile/{{ accountCode }}/{{ profilePin }}"
          headers:
            Content-Type: "application/json"
          qs:
            param1: "value1"
            param2: "value2"
          expect:
            - statusCode: 200
            - hasProperty: "data"
            - equals: ["data.param1", "value1"]
