# Test generated by RoostGPT for test credential-wallet-api-akshat using AI Type Vertex AI and AI Model code-bison-32k


# Test generated for /recipients/persons_get for http method type GET in artillery framework

# RoostTestHash=aa0a5d4980


---
config:
  target: {{ $processEnvironment.API_HOST }}
  expect: true
  securitySchemes:
    ApiKeyAuth: { type: 'apiKey', name: 'Token', in: 'header' }
  payload:
    csv: persons_get_success.csv
    skipHeader: true
scenarios:
  - get:
      - method: GET
        url: /recipients/persons
        headers:
          Token: {{$processEnvironment.AUTH_TOKEN}}
        expect:
          statusCode: 200
          contentType: application/json
          hasProperty: persons
          hasProperty: total
          hasProperty: persons[0].id
          hasProperty: persons[0].initials
          hasProperty: persons[0].firstName
          hasProperty: persons[0].middleName
          hasProperty: persons[0].lastName
          hasProperty: persons[0].birthDate
          hasProperty: persons[0].birthPlace
          hasProperty: persons[0].phone
          hasProperty: persons[0].email
          hasProperty: persons[0].postalCode
          hasProperty: persons[0].houseNumber
          hasProperty: persons[0].houseNumberPostfix
          hasProperty: persons[0].countryCode
          hasProperty: persons[0].reference
          hasProperty: persons[0].createdAt
          hasProperty: persons[0].updatedAt
          matchesRegexp: persons[0].id: ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
          matchesRegexp: persons[0].initials: ^[A-Z]{1,6}$
          matchesRegexp: persons[0].firstName: ^[\\p{L} .'-]{1,50}$
          matchesRegexp: persons[0].middleName: ^[\\p{L} .'-]{1,20}$
          matchesRegexp: persons[0].lastName: ^[\\p{L} .'-]{2,50}$
          matchesRegexp: persons[0].birthDate: ^[0-9]{4}-[0-1][0-9]-[0-3][0-9]$
          matchesRegexp: persons[0].birthPlace: ^[\\p{L} .,'-]{2,100}$
          matchesRegexp: persons[0].postalCode: ^[0-9]{4}[A-Z]{2}$|^[0-9]{4,5}$
          matchesRegexp: persons[0].houseNumber: ^\\d{1,6}$
          matchesRegexp: persons[0].houseNumberPostfix: ^[a-zA-Z .,_'-]{0,20}$
          matchesRegexp: persons[0].countryCode: ^[A-Z]{2}$
          matchesRegexp: persons[0].reference: .{0,100}
          matchesRegexp: persons[0].createdAt: ^[0-9]{4}-[0-1][0-9]-[0-3][0-9]T[0-2][0-9]:[0-5][0-9]:[0-5][0-9].{0,9}Z$
          matchesRegexp: persons[0].updatedAt: ^[0-9]{4}-[0-1][0-9]-[0-3][0-9]T[0-2][0-9]:[0-5][0-9]:[0-5][0-9].{0,9}Z$
      - think: 100
  - post:
      - method: POST
        url: /recipients/persons
        headers:
          Token: {{$processEnvironment.AUTH_TOKEN}}
        body:
          id: {{$processEnvironment.ID}}
          initials: {{$processEnvironment.INITIALS}}
          firstName: {{$processEnvironment.FIRST_NAME}}
          middleName: {{$processEnvironment.MIDDLE_NAME}}
          lastName: {{$processEnvironment.LAST_NAME}}
          birthDate: {{$processEnvironment.BIRTH_DATE}}
          phone: {{$processEnvironment.PHONE}}
          email: {{$processEnvironment.EMAIL}}
          postalCode: {{$processEnvironment.POSTAL_CODE}}
          houseNumber: {{$processEnvironment.HOUSE_NUMBER}}
          houseNumberPostfix: {{$processEnvironment.HOUSE_NUMBER_POSTFIX}}
          countryCode: {{$processEnvironment.COUNTRY_CODE}}
          reference: {{$processEnvironment.REFERENCE}}
        expect:
          statusCode: 201
          contentType: application/json
          hasProperty: id
          hasProperty: initials
          hasProperty: firstName
          hasProperty: middleName
          hasProperty: lastName
          hasProperty: birthDate
          hasProperty: birthPlace
          hasProperty: phone
          hasProperty: email
          hasProperty: postalCode
          hasProperty: houseNumber
          hasProperty: houseNumberPostfix
          hasProperty: countryCode
          hasProperty: reference
          hasProperty: createdAt
          hasProperty: updatedAt
          equals: id: {{$processEnvironment.ID}}
          equals: initials: {{$processEnvironment.INITIALS}}
          equals: firstName: {{$processEnvironment.FIRST_NAME}}
          equals: middleName: {{$processEnvironment.MIDDLE_NAME}}
          equals: lastName: {{$processEnvironment.LAST_NAME}}
          equals: birthDate: {{$processEnvironment.BIRTH_DATE}}
          equals: phone: {{$processEnvironment.PHONE}}
          equals: email: {{$processEnvironment.EMAIL}}
          equals: postalCode: {{$processEnvironment.POSTAL_CODE}}
          equals: houseNumber: {{$processEnvironment.HOUSE_NUMBER}}
          equals: houseNumberPostfix: {{$processEnvironment.HOUSE_NUMBER_POSTFIX}}
          equals: countryCode: {{$processEnvironment.COUNTRY_CODE}}
          equals: reference: {{$processEnvironment.REFERENCE}}
          matchesRegexp: id: ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
          matchesRegexp: initials: ^[A-Z]{1,6}$
          matchesRegexp: firstName: ^[\\p{L} .'-]{1,50}$
          matchesRegexp: middleName: ^[\\p{L} .'-]{1,20}$
          matchesRegexp: lastName: ^[\\p{L} .'-]{2,50}$
          matchesRegexp: birthDate: ^[0-9]{4}-[0-1][0-9]-[0-3][0-9]$
          matchesRegexp: birthPlace: ^[\\p{L} .,'-]{2,100}$
          matchesRegexp: postalCode: ^[0-9]{4}[A-Z]{2}$|^[0-9]{4,5}$
          matchesRegexp: houseNumber: ^\\d{1,6}$
          matchesRegexp: houseNumberPostfix: ^[a-zA-Z .,_'-]{0,20}$
          matchesRegexp: countryCode: ^[A-Z]{2}$
          matchesRegexp: reference: .{0,100}
          matchesRegexp: createdAt: ^[0-9]{4}-[0-1][0-9]-[0-3][0-9]T[0-2][0-9]:[0-5][0-9]:[0-5][0-9].{0,9}Z$
          matchesRegexp: updatedAt: ^[0-9]{4}-[0-1][0-9]-[0-3][0-9]T[0-2][0-9]:[0-5][0-9]:[0-5][0-9].{0,9}Z$
      - think: 100
  - get:
      - method: GET
        url: /recipients/persons/{{$processEnvironment.ID}}
        headers:
          Token: {{$processEnvironment.AUTH_TOKEN}}
        expect:
          statusCode: 200
          contentType: application/json
          hasProperty: id
          hasProperty: initials
          hasProperty: firstName
          hasProperty: middleName
          hasProperty: lastName
          hasProperty: birthDate
          hasProperty: birthPlace
          hasProperty: phone
          hasProperty: email
          hasProperty: postalCode
          hasProperty: houseNumber
          hasProperty: houseNumberPostfix
          hasProperty: countryCode
          hasProperty: reference
          hasProperty: createdAt
          hasProperty: updatedAt
          equals: id: {{$processEnvironment.ID}}
          equals: initials: {{$processEnvironment.INITIALS}}
          equals: firstName: {{$processEnvironment.FIRST_NAME}}
          equals: middleName: {{$processEnvironment.MIDDLE_NAME}}
          equals: lastName: {{$processEnvironment.LAST_NAME}}
          equals: birthDate: {{$processEnvironment.BIRTH_DATE}}
          equals: phone: {{$processEnvironment.PHONE}}
          equals: email: {{$processEnvironment.EMAIL}}
          equals: postalCode: {{$processEnvironment.POSTAL_CODE}}
          equals: houseNumber: {{$processEnvironment.HOUSE_NUMBER}}
          equals: houseNumberPostfix: {{$processEnvironment.HOUSE_NUMBER_POSTFIX}}
          equals: countryCode: {{$processEnvironment.COUNTRY_CODE}}
          equals: reference: {{$processEnvironment.REFERENCE}}
          matchesRegexp: id: ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
          matchesRegexp: initials: ^[A-Z]{1,6}$
          matchesRegexp: firstName: ^[\\p{L} .'-]{1,50}$
          matchesRegexp: middleName: ^[\\p{L} .'-]{1,20}$
          matchesRegexp: lastName: ^[\\p{L} .'-]{2,50}$
          matchesRegexp: birthDate: ^[0-9]{4}-[0-1][0-9]-[0-3][0-9]$
          matchesRegexp: birthPlace: ^[\\p{L} .,'-]{2,100}$
          matchesRegexp: postalCode: ^[0-9]{4}[A-Z]{2}$|^[0-9]{4,5}$
          matchesRegexp: houseNumber: ^\\d{1,6}$
          matchesRegexp: houseNumberPostfix: ^[a-zA-Z .,_'-]{0,20}$
          matchesRegexp: countryCode: ^[A-Z]{2}$
          matchesRegexp: reference: .{0,100}
          matchesRegexp: createdAt: ^[0-9]{4}-[0-1][0-9]-[0-3][0-9]T[0-2][0-9]:[0-5][0-9]:[0-5][0-9].{0,9}Z$
          matchesRegexp: updatedAt: ^[0-9]{4}-[0-1][0-9]-[0-3][0-9]T[0-2][0-9]:[0-5][0-9]:[0-5][0-9].{0,9}Z$
      - think: 100
  - put:
      - method: PUT
        url: /recipients/persons/{{$processEnvironment.ID}}
        headers:
          Token: {{$processEnvironment.AUTH_TOKEN}}
        body:
          id: {{$processEnvironment.ID}}
          initials: {{$processEnvironment.INITIALS}}
          firstName: {{$processEnvironment.FIRST_NAME}}
          middleName: {{$processEnvironment.MIDDLE_NAME}}
          lastName: {{$processEnvironment.LAST_NAME}}
          birthDate: {{$processEnvironment.BIRTH_DATE}}
          phone: {{$processEnvironment.PHONE}}
          email: {{$processEnvironment.EMAIL}}
          postalCode: {{$processEnvironment.POSTAL_CODE}}
          houseNumber: {{$processEnvironment.HOUSE_NUMBER}}
          houseNumberPostfix: {{$processEnvironment.HOUSE_NUMBER_POSTFIX}}
          countryCode: {{$processEnvironment.COUNTRY_CODE}}
          reference: {{$processEnvironment.REFERENCE}}
        expect:
          statusCode: 200
          contentType: application/json
          hasProperty: id
          hasProperty: initials
          hasProperty: firstName
          hasProperty: middleName
          hasProperty: lastName
          hasProperty: birthDate
          hasProperty: birthPlace
          hasProperty: phone
          hasProperty: email
          hasProperty: postalCode
          hasProperty: houseNumber
          hasProperty: houseNumberPostfix
          hasProperty: countryCode
          hasProperty: reference
          hasProperty: createdAt
          hasProperty: updatedAt
          equals: id: {{$processEnvironment.ID}}
          equals: initials: {{$processEnvironment.INITIALS}}
          equals: firstName: {{$processEnvironment.FIRST_NAME}}
          equals: middleName: {{$processEnvironment.MIDDLE_NAME}}
          equals: lastName: {{$processEnvironment.LAST_NAME}}
          equals: birthDate: {{$processEnvironment.BIRTH_DATE}}
          equals: phone: {{$processEnvironment.PHONE}}
          equals: email: {{$processEnvironment.EMAIL}}
          equals: postalCode: {{$processEnvironment.POSTAL_CODE}}
          equals: houseNumber: {{$processEnvironment.HOUSE_NUMBER}}
          equals: houseNumberPostfix: {{$processEnvironment.HOUSE_NUMBER_POSTFIX}}
          equals: countryCode: {{$processEnvironment.COUNTRY_CODE}}
          equals: reference: {{$processEnvironment.REFERENCE}}
          matchesRegexp: id: ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
          matchesRegexp: initials: ^[A-Z]{1,6}$
          matchesRegexp: firstName: ^[\\p{L} .'-]{1,50}$
          matchesRegexp: middleName: ^[\\p{L} .'-]{1,20}$
          matchesRegexp: lastName: ^[\\p{L} .'-]{2,50}$
          matchesRegexp: birthDate: ^[0-9]{4}-[0-1][0-9]-[0-3][0-9]$
          matchesRegexp: birthPlace: ^[\\p{L} .,'-]{2,100}$
          matchesRegexp: postalCode: ^[0-9]{4}[A-Z]{2}$|^[0-9]{4,5}$
          matchesRegexp: houseNumber: ^\\d{1,6}$
          matchesRegexp: houseNumberPostfix: ^[a-zA-Z .,_'-]{0,20}$
          matchesRegexp: countryCode: ^[A-Z]{2}$
          matchesRegexp: reference: .{0,100}
          matchesRegexp: createdAt: ^[0-9]{4}-[0-1][0-9]-[0-3][0-9]T[0-2][0-9]:[0-5][0-9]:[0-5][0-9].{0,9}Z$
          matchesRegexp: updatedAt: ^[0-9]{4}-[0-1][0-9]-[0-3][0-9]T[0-2][0-9]:[0-5][0-9]:[0-5][0-9].{0,9}Z$
      - think: 100
  - delete:
      - method: DELETE
        url: /recipients/persons/{{$processEnvironment.ID}}
        headers:
          Token: {{$processEnvironment.AUTH_TOKEN}}
        expect:
          statusCode: 204
          contentType: text/plain
