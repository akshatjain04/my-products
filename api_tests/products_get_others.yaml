# Test generated by RoostGPT for test MiniProjects using AI Type Open AI and AI Model gpt-4-1106-preview

# RoostTestHash=70199667a6

config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 1
  payload:
    path: "products_get_others.csv"
    fields:
      - "name"
      - "description"
      - "price"
    skipHeader: true
  environments:
    staging:
      target: "https://staging.example.com"
  plugins:
    expect: {}

scenarios:
  - name: "Negative test cases for GET /products"
    flow:
      - log: "Sending request with invalid URL"
      - get:
          url: "/invalid/products"
          expect:
            - statusCode: 404
      - think: 1

      - log: "Sending request with invalid Authorization header"
      - get:
          url: "/products"
          headers:
            Authorization: "Invalid {{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 401
      - think: 1

      - log: "Sending request with missing required fields in the payload"
      - get:
          url: "/products"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          json:
            name: "{{ name }}"
            # Intentionally leaving out 'description' and 'price' which are required
          expect:
            - statusCode: 400
            - hasProperty: "error"
      - think: 1

      - log: "Sending request with invalid data types in the payload"
      - get:
          url: "/products"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          json:
            name: 12345 # Invalid data type, should be string
            description: true # Invalid data type, should be string
            price: "free" # Invalid data type, should be integer
          expect:
            - statusCode: 400
            - hasProperty: "error"
      - think: 1

      - log: "Sending request with valid payload but expecting wrong response"
      - get:
          url: "/products"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          json:
            name: "{{ name }}"
            description: "{{ description }}"
            price: "{{ price }}"
          expect:
            - statusCode: 500 # Intentionally expecting the wrong status code
            - hasProperty: "error"
      - think: 1

      - log: "Sending request and expecting a missing header in the response"
      - get:
          url: "/products"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 200
            - "!hasHeader": "X-Missing-Header" # Expecting a header that should not exist
