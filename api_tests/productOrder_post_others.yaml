# ********RoostGPT********

# Test generated by RoostGPT for test ProductOrdering-restAssured-API-Spec-test using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# Test generated for /productOrder_post for http method type POST in artillery framework
# RoostTestHash=13e6a9adf7
# 
# 

# ********RoostGPT********
config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 10
      arrivalRate: 1
  payload:
    path: "./productOrder_post_others.csv"
    fields: ["correlationOrder", "associatedDocument", "associatedDocumentDate", "type", "infraType", "name", "subscriberId", "businessUnity", "fantasyName", "phoneNumbers", "hasSlot", "date", "mandatoryType", "workOrderId", "id", "inventoryId", "reference", "complement", "type", "complement", "catalogId", "action"]
    skipHeader: true
    delimiter: "^|^"
  plugins:
    expect: {}

scenarios:
  - flow:
      - log: 'TEST - Post API Scenario'
      - post:
          url: "/productOrder"
          headers:
            content-type: "application/json"
            authorization: "Bearer {{$processEnvironment.AUTH_TOKEN}}"
          json: 
            order:
              correlationOrder: "{{ correlationOrder }}"
              associatedDocument: "{{ associatedDocument }}"
              associatedDocumentDate: "{{ associatedDocumentDate }}"
              type: "{{ type }}"
              infraType: "{{ infraType }}"
            customer:
              name: "{{ name }}"
              subscriberId: "{{ subscriberId }}"
              businessUnity: "{{ businessUnity }}"
              fantasyName: "{{ fantasyName }}"
              phoneNumber: "{{ phoneNumbers }}"
            appointment:
              hasSlot: "{{ hasSlot }}"
              date: "{{ date }}"
              mandatoryType: "{{ mandatoryType }}"
              workOrderId: "{{ workOrderId }}"
            addresses:
              address:
                id: "{{ id }}"
                inventoryId: "{{ inventoryId }}"
                reference: "{{ reference }}"
                complement: "{{ complement }}"
            products:
              product:
                catalogId: "{{ catalogId }}"
                action: "{{ action }}"
          expect:
            - statusCode: 400
            - hasProperty: 'title'
            - hasProperty: 'details'
            - notHasProperty: 'related'
      - think: 1
      - get:
          url: "/invalid-url"
          headers:
            authorization: "Bearer {{$processEnvironment.AUTH_TOKEN}}"
          expect:
            - statusCode: 404
      - think: 1  
