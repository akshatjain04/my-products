# ********RoostGPT********

# Test generated by RoostGPT for test MiniProjects using AI Type Claude AI and AI Model claude-3-5-haiku-20241022
# 
# ROOST_METHOD_HASH=34d2e5c2ae
# ROOST_METHOD_SIG_HASH=2b65b4a644
# 
#    ########## Scenario ##########  
# 
# {
#   feature: 'Feature: Product Update Functionality\n' +
#     '  As a user of the product management system\n' +
#     '  I want to update existing products\n' +
#     '  So that I can modify product information',
#   background: 'Background:\n' +
#     '    Given the Product Management API is running at "http://localhost:8080/products"\n' +
#     '    And the product repository is initialized with test data',
#   rule: null,
#   scenario: {
#     title: 'Scenario: Verify partial product update',
#     steps: 'Given a product exists in the repository with the following details:\n' +
#       '      | id | name           | description               | price |\n' +
#       '      | 1  | Original Phone | A basic smartphone model  | 199.99|\n' +
#       'When I send a PUT request to "/products/1" with the following JSON payload:\n' +
#       '      """\n' +
#       '      {\n' +
#       '        "name": "Updated Phone"\n' +
#       '      }\n' +
#       'Then the response status code should be 200\n' +
#       'And the response body should contain:\n' +
#       '      | id | name           | description               | price |\n' +
#       '      | 1  | Updated Phone  | A basic smartphone model  | 199.99|',
#     examples: ''
#   }
# }
# 

# ********RoostGPT********
config:
  target: "http://localhost:8080"
  phases:
    - duration: 1
      arrivalRate: 1
  defaults:
    headers:
      Content-Type: application/json
      Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"

scenarios:
  - name: "Product Update Functionality"
    flow:
      - log: "Preparing to update product with partial information"
      
      - put:
          url: "/products/1"
          json:
            name: "Updated Phone"
          capture:
            - json: "$.name"
              as: "updatedProductName"
          expect:
            - statusCode: 200
            - hasProperty: "name"
            - hasProperty: "description"
            - hasProperty: "price"
            - hasProperty: "id"
            
      - log: "Verifying updated product details"
      
      - get:
          url: "/products/1"
          expect:
            - statusCode: 200
            - hasProperty: "name"
            - hasProperty: "description"
            - hasProperty: "price"
            - hasProperty: "id"
            - equals: 
                - "$.name"
                - "Updated Phone"
            - equals:
                - "$.price"
                - 199.99
            - equals:
                - "$.description"
                - "A basic smartphone model"
