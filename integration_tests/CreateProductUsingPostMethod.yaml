# ********RoostGPT********

# Test generated by RoostGPT for test MiniProjects using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# ROOST_METHOD_HASH=4b42da41a7
# ROOST_METHOD_SIG_HASH=1ff6a5cf8e
# 
#    ########## Scenario ##########  
# 
# {
#   feature: 'Feature: Integration Tests for ProductController API',
#   background: null,
#   rule: null,
#   scenario: {
#     title: 'Scenario: Create a product using POST method',
#     steps: "Given the API base URL 'http://localhost:8080'\n" +
#       "And the request payload with name 'Laptop', description 'Gaming Laptop', and price '1200.00'\n" +
#       "When I send a POST request to '/products'\n" +
#       'Then the response status should be 201\n' +
#       "And the response body should contain the created product with name 'Laptop', description 'Gaming Laptop', and price '1200.00'",
#     examples: ''
#   }
# }
# 

# ********RoostGPT********
config:
  target: "http://localhost:8080"
  phases:
    - duration: 60
      arrivalRate: 5
  plugins:
    expect: {}
  payload:
    path: "CreateProductUsingPostMethod.csv"
    skipHeader: true
    delimiter: "^|^"
    fields:
      - name
      - description
      - price
scenarios:
  - name: Create a product using POST method
    flow:
      - post:
          url: "/products"
          headers:
            Content-Type: application/json
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          payload:
            name: "{{ name }}"
            description: "{{ description }}"
            price: "{{ price }}"
          expect:
            - statusCode: 201
            - hasProperty: name
            - hasProperty: description
            - hasProperty: price
            - jmespath: 
                expression: "name"
                value: "{{ name }}"
            - jmespath:
                expression: "description"
                value: "{{ description }}"
            - jmespath:
                expression: "price"
                value: "{{ price }}"
      - log: "Created product successfully with name '{{ name }}', description '{{ description }}', and price '{{ price }}'."
      - think: 3
