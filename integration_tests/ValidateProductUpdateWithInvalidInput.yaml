# ********RoostGPT********

# Test generated by RoostGPT for test MiniProjects using AI Type Claude AI and AI Model claude-3-5-haiku-20241022
# 
# ROOST_METHOD_HASH=0dacc2e40b
# ROOST_METHOD_SIG_HASH=5e299e7bff
# 
#    ########## Scenario ##########  
# 
# {
#   feature: 'Feature: Product Update Functionality\n' +
#     '  As a user of the product management system\n' +
#     '  I want to update existing products\n' +
#     '  So that I can modify product information',
#   background: 'Background:\n' +
#     '    Given the Product Management API is running at "http://localhost:8080/products"\n' +
#     '    And the product repository is initialized with test data',
#   rule: null,
#   scenario: {
#     title: 'Scenario: Validate product update with invalid input',
#     steps: 'Given a product exists in the repository with the following details:\n' +
#       '      | id | name           | description               | price |\n' +
#       '      | 1  | Original Phone | A basic smartphone model  | 199.99|\n' +
#       'When I send a PUT request to "/products/1" with the following JSON payload:\n' +
#       '      """\n' +
#       '      {\n' +
#       '        "name": "",\n' +
#       '        "description": "",\n' +
#       '        "price": -50.00\n' +
#       '      }\n' +
#       'Then the response status code should be 400\n' +
#       'And the response should contain validation error details',
#     examples: ''
#   }
# }
# 

# ********RoostGPT********
config:
  target: "http://localhost:8080"
  phases:
    - duration: 1
      arrivalRate: 1
  variables:
    invalidProductId: "1"
    invalidProductPayload:
      name: ""
      description: ""
      price: -50.00

scenarios:
  - name: "Product Update with Invalid Input Validation"
    flow:
      - log: "Attempting to update product with invalid data"
      
      - put:
          url: "/products/{{ invalidProductId }}"
          headers:
            Content-Type: "application/json"
          json: "{{ invalidProductPayload }}"
          expect:
            - statusCode: 400
            - hasProperty: "errors"
            
      - log: "Validation errors should be returned for invalid product update"
